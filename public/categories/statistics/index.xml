<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Statistics | TypeThePipe</title>
    <link>/categories/statistics/</link>
      <atom:link href="/categories/statistics/index.xml" rel="self" type="application/rss+xml" />
    <description>Statistics</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 12 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-32.png</url>
      <title>Statistics</title>
      <link>/categories/statistics/</link>
    </image>
    
    <item>
      <title>Revisiting normality tests in Python</title>
      <link>/post/normality-test-python/</link>
      <pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate>
      <guid>/post/normality-test-python/</guid>
      <description>
&lt;script src=&#34;/post/normality-test-python/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;variable-distribution-and-normality&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;1. Variable Distribution and Normality&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The “distribution function” of a random variable is a function that specifies the probability that the variable’s observed value will lie in any given region of possible values. The “normal distribution” is the most commonly used distribution in statistics. A variable that is normally distributed has a histogram (or “density function”) that is bell-shaped, with only one peak, unimodal, asymptotic and is symmetric around the mean. The terms kurtosis (“peakedness” or “heaviness of tails”) and skewness (asymmetry around the mean) are often used to describe departures from normality. In a normal distribution, the mean, median, and mode are equal.&lt;/p&gt;
&lt;p&gt;The normal family of distributions all have the same general shape and are parameterized by mean and standard deviation.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parametric-statistics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;2. Parametric statistics&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Parametric statistics assume that the sample data follows a probability distribution that is based on a set of parameters. The most common assumption is that data is distributed normally. Most of the common statistical methods are parametric. Although parametric statistics are considered more powerful than nonparametric statistics, they are not always applicable for the analysis of the significance of differences. The reason is that the assumptions on which they are based are not always met.&lt;/p&gt;
&lt;p&gt;– Parametric statistics are more powerful for the same sample size than nonparametric statistics.
– Parametric statistics use continuous variables, whereas nonparametric statistics often use discrete variables.
– If you use parametric statistics when the data strongly diverts from the assumptions on which the parametric statistics are based, the result might lead to incorrect conclusions.
– Nonparametric statistics usually can be done fast and in an easy way. They are designed for smaller numbers of data, and also easier to understand and to explain.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;normality-checks-in-python&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;3. Normality checks in Python&lt;/strong&gt;&lt;/h2&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import pandas as pd
url = (&amp;#39;https://raw.githubusercontent.com/plotly/datasets/master/monthly-milk-production-pounds.csv&amp;#39;)
data = pd.read_csv(url, sep=&amp;#39;,&amp;#39;)
data.columns = [&amp;#39;month&amp;#39;, &amp;#39;monthly_milk_production&amp;#39;]&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;jarque-bera-test&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Jarque-Bera test&lt;/h3&gt;
&lt;p&gt;The Jarque-Bera test tests whether the sample data has the skewness and kurtosis matching a normal distribution.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from scipy.stats import jarque_bera

result = (jarque_bera(data[&amp;#39;monthly_milk_production&amp;#39;]))

print(f&amp;quot;JB statistic: {result[0]}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## JB statistic: 4.278200965074682&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(f&amp;quot;p-value: {result[1]}&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## p-value: 0.11776072322104847&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the p-value ≤ 0.05, then we reject the null hypothesis i.e. we assume the distribution of our variable is not normal/gaussian.
If the p-value &amp;gt; 0.05, then we fail to reject the null hypothesis i.e. we assume the distribution of our variable is normal/gaussian.&lt;/p&gt;
&lt;p&gt;Looking at these results, we fail to reject the null hypothesis and conclude that the sample data follows normal distribution.&lt;/p&gt;
&lt;p&gt;However, Jarque-Bera test works properly in large samples (usually larger than 2000 observations) at its statistic has a Chi-squared distribution with 2 degrees of freedom). As long as our dataset is not that big, we need now other way to test it.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shapiro-wilk-test&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Shapiro-Wilk Test&lt;/h3&gt;
&lt;p&gt;The Shapiro-Wilk test, proposed in 1965, calculates a W statistic that tests whether a random sample, x1,x2,…,xn comes from (specifically) a normal distribution . Small values of W are evidence of departure from normality and percentage points for the W statistic, obtained via Monte Carlo simulations, were reproduced by Pearson and Hartley (1972, Table 16). This test has done very well in comparison studies with other goodness of fit tests.&lt;/p&gt;
&lt;p&gt;The W statistic is calculated as follows:&lt;/p&gt;
&lt;p&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;
&lt;mi&gt;W&lt;/mi&gt;
&lt;mo&gt;=&lt;/mo&gt;
&lt;mfrac&gt;
&lt;msup&gt;
&lt;mrow&gt;
&lt;mo&gt;(&lt;/mo&gt;
&lt;mrow&gt;
&lt;munderover&gt;
&lt;mo&gt;∑&lt;!-- ∑ --&gt;&lt;/mo&gt;
&lt;mrow class=&#34;MJX-TeXAtom-ORD&#34;&gt;
&lt;mi&gt;i&lt;/mi&gt;
&lt;mo&gt;=&lt;/mo&gt;
&lt;mn&gt;1&lt;/mn&gt;
&lt;/mrow&gt;
&lt;mi&gt;n&lt;/mi&gt;
&lt;/munderover&gt;
&lt;msub&gt;
&lt;mi&gt;a&lt;/mi&gt;
&lt;mi&gt;i&lt;/mi&gt;
&lt;/msub&gt;
&lt;msub&gt;
&lt;mi&gt;x&lt;/mi&gt;
&lt;mrow class=&#34;MJX-TeXAtom-ORD&#34;&gt;
&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;
&lt;mi&gt;i&lt;/mi&gt;
&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;
&lt;/mrow&gt;
&lt;/msub&gt;
&lt;/mrow&gt;
&lt;mo&gt;)&lt;/mo&gt;
&lt;/mrow&gt;
&lt;mn&gt;2&lt;/mn&gt;
&lt;/msup&gt;
&lt;mrow&gt;
&lt;munderover&gt;
&lt;mo&gt;∑&lt;!-- ∑ --&gt;&lt;/mo&gt;
&lt;mrow class=&#34;MJX-TeXAtom-ORD&#34;&gt;
&lt;mi&gt;i&lt;/mi&gt;
&lt;mo&gt;=&lt;/mo&gt;
&lt;mn&gt;1&lt;/mn&gt;
&lt;/mrow&gt;
&lt;mi&gt;n&lt;/mi&gt;
&lt;/munderover&gt;
&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;
&lt;msub&gt;
&lt;mi&gt;x&lt;/mi&gt;
&lt;mi&gt;i&lt;/mi&gt;
&lt;/msub&gt;
&lt;mo&gt;−&lt;!-- − --&gt;&lt;/mo&gt;
&lt;mrow class=&#34;MJX-TeXAtom-ORD&#34;&gt;
&lt;mover&gt;
&lt;mi&gt;x&lt;/mi&gt;
&lt;mo stretchy=&#34;false&#34;&gt;¯&lt;!-- ¯ --&gt;&lt;/mo&gt;
&lt;/mover&gt;
&lt;/mrow&gt;
&lt;msup&gt;
&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;
&lt;mn&gt;2&lt;/mn&gt;
&lt;/msup&gt;
&lt;/mrow&gt;
&lt;/mfrac&gt;
&lt;mspace width=&#34;thinmathspace&#34; /&gt;
&lt;mo&gt;,&lt;/mo&gt;
&lt;/math&gt;&lt;/p&gt;
&lt;p&gt;where the x(i) are the ordered sample values (x(1) is the smallest) and the ai are constants generated from the means, variances and covariances of the order statistics of a sample of size n from a normal distribution &lt;a href=&#34;https://www.itl.nist.gov/div898/handbook/prc/section2/prc213.htm&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from scipy.stats import shapiro

stat, p = (shapiro(data[&amp;#39;monthly_milk_production&amp;#39;]))

if p&amp;gt; 0.05:
  print(&amp;#39;It is probabily a Gaussian distribution&amp;#39;)
else:
  print(&amp;#39;It is probably NOT a Gaussian&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## It is probably NOT a Gaussian&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(p)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0.0353936105966568&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the p-value ≤ 0.05, then we reject the null hypothesis i.e. we assume the distribution of our variable is not normal/gaussian.
If the p-value &amp;gt; 0.05, then we fail to reject the null hypothesis i.e. we assume the distribution of our variable is normal/gaussian.&lt;/p&gt;
&lt;p&gt;As we see, we have now contradictory results in boths tests. We shoudn’t stick to one test p-value, but evaluate the big picture, number of samples… Shapiro-Wilk test is not recommendable with an elevate number of (&amp;gt;70) or with outliers.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dagostinos-k-squared-test&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;D’Agostino’s K-squared test&lt;/h3&gt;
&lt;p&gt;As last attempt, we are trying D’Agostino K-squared test and the QQ plot.&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;from scipy.stats import normaltest

stat, p = (normaltest(data[&amp;#39;monthly_milk_production&amp;#39;]))

if p&amp;gt; 0.05:
  print(&amp;#39;It is probabily a Gaussian distribution&amp;#39;)
else:
  print(&amp;#39;It is probably NOT a Gaussian&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## It is probably NOT a Gaussian&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(p)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 0.005832826491323857&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;#https://machinelearningmastery.com/a-gentle-introduction-to-normality-tests-in-python/
# QQ Plot
from numpy.random import seed
from numpy.random import randn
from statsmodels.graphics.gofplots import qqplot
from matplotlib import pyplot

# q-q plot
qqplot(data[&amp;#39;monthly_milk_production&amp;#39;], line=&amp;#39;s&amp;#39;).show()&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;
p {
  word-spacing: 3px;
  text-indent: 20px;
  text-align: justify;
}
.page-subtitle {
  text-align: left  !important;
    text-indent: 0px !important;
}
.card-text {
  text-align: left  !important;
    text-indent: 0px !important;
}
&lt;/style&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A/B Testing</title>
      <link>/post/ab-testing/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/ab-testing/</guid>
      <description>
&lt;script src=&#34;/post/ab-testing/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;ok-what-on-earth-is-ab-testing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ok, what on earth is A/B testing?&lt;/h2&gt;
&lt;p&gt;A/B testing is a pretty common technique nowadays in digital marketing, consisting in carrying out two different actions and comparing their results. For example, these results could be the conversion rate of a marketing campaign or the &lt;a href=&#34;https://www.wordstream.com/click-through-rate&#34;&gt;Click Through Rate&lt;/a&gt;. It is also widely used beyond marketing, tipically in areas such as pharmacology or psychology.&lt;/p&gt;
&lt;p&gt;Let’s suppose we want to boost sales of a product or service and to do this we decide to create a new web design. We will carry out an experiment called A/B test and will be able to measure the influence of our changes. For that purpose we will split randomly our users in two groups: control group, which will see the web as it is now, and the experimental group, which will be shown the new design. Once finished the test, we will analyze both results to find out which web design led to best performance.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;key concept&lt;/strong&gt; to remember here is that when doing such a test over a sample instead using the whole population, &lt;strong&gt;any metric we may study have associated some uncertainty&lt;/strong&gt; that have to be taken into account when interpreting the results. In our case, for every user visiting our website, we can only get two different outcomes: client buys or not, client leaves the company or not…that is, success or failure. A random variable like this is said to follow a binomial distribution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Plots/success_failure.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;types-of-errors&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Types of errors&lt;/h2&gt;
&lt;p&gt;To properly design the experiment first we need to understand the difference between the &lt;strong&gt;two kind of errors&lt;/strong&gt; we can incur when evaluating the results of the test. Let’s suppose we have already carried out the test and collected the data. For each proposed design we measured certain conversion rate.&lt;/p&gt;
&lt;p&gt;One possibility is that the difference we found may have come up simply by chance: Let’s say, in fact, the new design does not bring anything new and it does not boost sales, but we have been “lucky” when distributing the potential clients in groups (remember this was a random process) and by pure chance we got more sales among the customers that saw the new website. This is known as a type I error (normally called &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;). It is the probability of &lt;em&gt;hallucinate&lt;/em&gt;, and believe our variante works best when actually it does not.&lt;/p&gt;
&lt;p&gt;On the other hand, when designing an A/B test we also have to take into account we could make another kind of error. Let’s imagine the marketing team proposes a design that actually works (and when I say it works I mean that if I had a crystal ball I would find out it really works. To put it less flamboyantly: If we could make millions of visitors in our website we would conclude with no doubts that our new design boosts sales). However, as we can’t wait for so long to get the results, we will have to conclude based only on the results of a sample. &lt;strong&gt;But as in every sample, in some way the results we get depend on randomness&lt;/strong&gt;, to how “lucky” we are when choosing the people in every group. This implies that, when evaluating the results we could end up having exactly the same conversion rate with both websites.
Then, the million-dollar question: Are these results significant? Then, the new design has absolutely no effect? Or, analogously to the previous case, could it be that we had “bad luck” when splitting the groups and thus we are not &lt;em&gt;seeing&lt;/em&gt; the effects of the new design? This is known as type II error (&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;): the probability of not getting significant results when actually there is a difference between the conversion rates of each group.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Plots/doubt.png&#34; /&gt;&lt;/p&gt;
&lt;figcaption&gt;
Image from &lt;a href=&#34;https://www.clearswift.com/blog/2018/12/20/cutting-out-%E2%80%98false-positive%E2%80%99-lexical-expression-qualifiers&#34;&gt;Clearswift&lt;/a&gt;
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;the-statistics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The statistics&lt;/h2&gt;
&lt;p&gt;Technically speaking, in statistical inference we call hypothesis testing to the procedure followed to evaluate if a property of a population is compatible with the measurement from a sample.
We define the null hypothesis &lt;span class=&#34;math inline&#34;&gt;\(H_0\)&lt;/span&gt; as the default hypothesis we want to challenge, the one we will keep if we can’t collect evidence against it. As opposed, we usually define implicitly the alternative hypothesis as “&lt;span class=&#34;math inline&#34;&gt;\(H_0\)&lt;/span&gt; is false”.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;significance level&lt;/strong&gt; or &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; level is the probability of rejecting the null hypothesis when it is true. 95% of significance means that, if we repeated the experiment many times, 95% of the times we obtain significance results it will be because indeed the variant conversion rate beats the control conversion rate, and only in 5% of the cases we will get a significant false positive&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; is the probability of not rejecting the null hypothesis when it is false. It is common to talk about &lt;strong&gt;statistical power&lt;/strong&gt; (defined as 1 - &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;), which is the probability of rejecting the null hypothesis when it is false. For example, planning an experiment to have 80% power implies that, if we repeat the test several times with a variant that indeed beats the conversion rate, we will obtain significant results 80% of the times. It’s the power of the lens, our capacity to accurately distinguish the difference between the conversion rates of both groups.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Taking all above into account, it is easy to see that when evaluating the results of the test we may stumble upon four different cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;strong&gt;True positive&lt;/strong&gt;: Results point out the success of the variant and actually, if we could carry out the test with the whole population we would see that the new design indeed boosts the conversion rate.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;2&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;strong&gt;True negative&lt;/strong&gt;: Results point out the variant doesn’t improves the control version and indeed it does not.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;3&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;strong&gt;False positive (type I error)&lt;/strong&gt;: Results point out the variant has been a success, but actually this result is due to chance.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;4&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;strong&gt;False negative (type II error)&lt;/strong&gt;: Results point out the variant does not improves the control version but actually it does but we haven’t collected enough data.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;Plots/ConfusionMatrix.png&#34; /&gt;&lt;/p&gt;
&lt;figcaption&gt;
Image from &lt;a href=&#34;https://en.wikipedia.org/wiki/Confusion_matrix&#34;&gt;Wikipedia&lt;/a&gt;
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;what-about-sample-size&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What about sample size?&lt;/h2&gt;
&lt;p&gt;What role does it play the sample size in a A/B test? &lt;strong&gt;The more sample, the less uncertainty&lt;/strong&gt;.
We can calculate the uncertainty associated with an statistic with the next formula:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \hat{p} \pm z \sqrt{\frac{\hat{p}(1-\hat{p})}{n}} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;being &lt;span class=&#34;math inline&#34;&gt;\(\hat{p}\)&lt;/span&gt; the observed rate, z the Z-Score and n the sample size. The &lt;a href=&#34;http://www.z-table.com/&#34;&gt;Z-score&lt;/a&gt; of a measurement tell us where it is located in the distribution, that is, how far in standard deviations is that measurement from the average.&lt;/p&gt;
&lt;p&gt;A common question when designing an A/B test is: how big my sample size should be?
To answer this question we can use the R function &lt;code&gt;power.prop.test&lt;/code&gt; which takes as arguments sample size, conversion rates of our groups, significance level and power: We set four of them to get the fifth one. So this is the perfect tool to design an A/B test: we can find out the required sample size to observe certain effects under a given error tolerance, or find out the statistical power of the test given conversion rates and sample sizes.
Through this tool we arrive to another important concept: MDE is the Minimum Detectable Effect we can find significant under certain significance assumptions and sample size. This term leads to another implicit idea: To be able to distinguish small effects we must have enough sample data, otherwise it’s easy to fail in a type II error (the difference exists but we are not able to detect it).&lt;/p&gt;
&lt;p&gt;Given the four posibilities outlined above, we will design accordingly the test taking into account the consequences of the different error types. What are the consequences of concluding the new marketing campaign beats the old one? What are the consequences of choosing the former one and discard the new one because we haven’t found significant results due to not having collected enough data?
We must face these questions when setting our tolerance to &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; errors. And there isn’t a unique valid answer for them: It is not the same to live in illusion thinking your new marketing campaing will boost sales by a 10% than announce in a scientific paper that you found the cure of cancer when the only thing you found in your data is statistic noise and you have been &lt;a href=&#34;https://en.wikipedia.org/wiki/Fooled_by_Randomness&#34;&gt;Fooled by Randomness&lt;/a&gt;. Therefore, those parameters are domain specific.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;are-my-results-significant&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Are my results significant?&lt;/h2&gt;
&lt;p&gt;Finally, once set the required confidence, sized properly the experiment and collected the data, the question we try to answer now is: How likely is that we got certain apparently-good results purely by chance, and really there isn’t any improvement between conversion rates but we were truly unlucky with the measurements?&lt;/p&gt;
&lt;p&gt;To find out if we got a significant result we can carry out an hypotesis test with the R function &lt;code&gt;prop.test&lt;/code&gt;. I also developed a &lt;a href=&#34;https://pabloct.shinyapps.io/StatisticalSignificance/&#34;&gt;shiny app&lt;/a&gt; that allow us to do so without using R.
The key concept here is the p-value. Let’s say we measure that our variant boost conversion rate from 5% to 8%. Is it a significant improvement? To answer this question we make use of a statistical test called Z-test which, given both ratios and sample sizes give us &lt;strong&gt;the probability of find a result as extreme by pure chance&lt;/strong&gt;, assumming there is actually no difference between conversion rates. &lt;strong&gt;That probability is the p-value&lt;/strong&gt;.
We only have left to compare the obtained p-value with the &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; we previously set. &lt;strong&gt;If p-value &amp;lt; &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; we will reject the null hypothesis&lt;/strong&gt;, that is, we will claim our result as significant. Otherwise (p-value &amp;gt; &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;) we won’t conclude our variant does not improve the default conversion rate, we only could say that we have no evidence about it improving it. Analogously, in court trials the term &lt;em&gt;not guilty&lt;/em&gt; is used when no evidence is found against the defendant because that doesn’t mean he is innocent. &lt;a href=&#34;https://en.wikipedia.org/wiki/Evidence_of_absence&#34;&gt;Absence of evidence is not evidence of absence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Given the uncertainty associated with the measurements, we can visualize the probability distribution of the conversion rates of each group with a plot like the one below: two binomial distributions centered around the sample statistics and how are they related with the main concepts discussed in this article: &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; and p-value.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Plots/ErrorTypes.png&#34; /&gt;&lt;/p&gt;
&lt;figcaption&gt;
Error types, power and effect size
&lt;/figcaption&gt;
&lt;p&gt;I have developed an small shiny app to know whether our findings are significant and to learn how these concepts (statistical power, &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; errors, sample size and effect size) are related. &lt;a href=&#34;https://pabloct.shinyapps.io/StatisticalSignificance/&#34;&gt;Check it out!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
