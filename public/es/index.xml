<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TypeThePipe</title>
    <link>/es/</link>
      <atom:link href="/es/index.xml" rel="self" type="application/rss+xml" />
    <description>TypeThePipe</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es</language><lastBuildDate>Sun, 28 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-32.png</url>
      <title>TypeThePipe</title>
      <link>/es/</link>
    </image>
    
    <item>
      <title>A/B Testing</title>
      <link>/es/post/ab-testing/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/es/post/ab-testing/</guid>
      <description>


&lt;div id=&#34;vale-en-que-consisten-los-test-ab&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Vale, en qué consisten los test A/B?&lt;/h2&gt;
&lt;p&gt;Un test A/B es una técnica muy utilizada hoy en día en Marketing digital que consiste en llevar a cabo dos acciones diferentes en paralelo y comparar sus resultados. Por ejemplo, estos resultados pueden ser la tasa de conversión de una campaña de marketing (ventas, subscripciones…) o el número de clicks en un enlace respecto a impresiones (&lt;a href=&#34;https://www.wordstream.com/click-through-rate&#34;&gt;Click Through Rate&lt;/a&gt;). También es ampliamente utilizado fuera del ámbito del marketing, típicamente en áreas como la farmacología o la psicología.&lt;/p&gt;
&lt;p&gt;Supongamos que queremos impulsar las ventas de un producto o servicio y para ello hemos decidido usar un nuevo diseño web.
Diseñaremos un experimento, llamado test A/B, mediante el cual seremos capaces de medir la influencia de nuestro cambio. Para ello, dividiremos a nuestros usuarios aleatoriamente en un grupo de control que verá la página como hasta ahora y otro sobre el que probaremos la variante llamado grupo experimental. Una vez llevada a cabo la prueba, compararemos los resultados entre los dos grupos de cualquiera que sea la métrica que estemos midiendo para tomar una decisión sobre qué diseño web utilizar.&lt;/p&gt;
&lt;p&gt;El concepto más importante a recordar aquí es que al realizar el experimento sobre una muestra en lugar de hacerlo sobre toda la población, cualquier medida que tomemos tendrá asociada una incertidumbre que tenemos que tener en cuenta a la hora de interpretar los resultados. En nuestro caso, para cada visita solo podemos obtener dos resultados: el cliente compra o no, el usuario se suscribe o no, el usuario se marcha o no…en resumen, éxito o fracaso. Una variable aleatoria de este tipo se dice que sigue una distribución binomial.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Plots/success_failure.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tipos-de-errores&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tipos de errores&lt;/h2&gt;
&lt;p&gt;De cara a diseñar el experimento, necesitamos entender primero la diferencia entre los dos tipos de error en los que podemos incurrir al evaluar los resultados del test. Vamos a suponer que ya hemos realizado el test y hemos obtenido resultados: para cada diseño propuesto hemos medido una tasa de conversión.&lt;/p&gt;
&lt;p&gt;En primer lugar, una posibilidad es que la diferencia que hemos medido sea producto del azar: Supongamos que en realidad el nuevo diseño no aporta nada nuevo y no supone ningún aumento en el número de ventas, pero hemos tenido “buena suerte” a la hora de distribuir a los potenciales clientes en grupos (recordemos que este proceso lo hemos hecho al azar) y por pura casualidad hemos vendido más entre los clientes que han visto nuestra nueva web. Esto es lo que se conoce como error tipo I (normalmente llamado &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;). Es la probabilidad de &lt;em&gt;alucinar&lt;/em&gt; y creer que nuestra variante funciona mejor cuando en realidad no lo hace.&lt;/p&gt;
&lt;p&gt;Por otro lado, a la hora de diseñar un test A/B también tenemos que tener en cuenta que podríamos cometer otro tipo de error, esta vez por omisión. Imaginemos que el equipo de marketing propone un diseño que sí funciona (y cuando digo que funciona me refiero a que si tuviera una bola de cristal vería que en realidad sí que funciona. Dicho de manera menos esotérica: si pudiéramos conseguir millones de visitas veríamos sin lugar a dudas que efectivamente conseguimos aumentar las ventas). Sin embargo, como no podemos esperar tanto tiempo para evaluar los resultados tendremos que sacar las conclusiones basándonos únicamente en los resultados de una muestra. &lt;strong&gt;Pero como en toda muestra, los resultados que obtengamos están sujetos de alguna manera al azar&lt;/strong&gt;, a la “suerte” que tengamos al elegir a las personas que conforman los grupos. Esto implica que, cuando damos por terminado el experimento, podríamos llegar a que a través de ambas webs conseguimos convertir exactamente la misma proporción de ventas.
Entonces, la pregunta del millón: ¿Estos resultados son significativos? ¿Entonces, el nuevo diseño no tiene absolutamente ningún efecto? ¿O, análogamente al caso anterior, podría ser que hubiéramos tenido mala suerte en la elección de los grupos y no estuviéramos viendo los efectos del nuevo diseño? Esto es lo que se conoce como error tipo II (&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;): la probabilidad de no obtener resultados significativos cuando en realidad sí que existe diferencia entre los ratios de conversión de cada grupo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Plots/doubt.png&#34; /&gt;&lt;/p&gt;
&lt;figcaption&gt;
Imagen sacada de &lt;a href=&#34;https://www.clearswift.com/blog/2018/12/20/cutting-out-%E2%80%98false-positive%E2%80%99-lexical-expression-qualifiers&#34;&gt;Clearswift&lt;/a&gt;
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;la-estadistica&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;La estadística&lt;/h2&gt;
&lt;p&gt;Dicho de manera más técnica, en inferencia estadística llamamos contraste de hipótesis al procedimiento seguido para evaluar si una propiedad de una población es compatible con la medida en una muestra.
Definimos la hipótesis nula &lt;span class=&#34;math inline&#34;&gt;\(H_0\)&lt;/span&gt; como la hipótesis que queremos contrastar, aquella de la que partimos y la que mantendremos si no reunimos evidencia de lo contrario. En contraposición, frecuentemente definimos la hipótesis alternativa de manera implícita como “&lt;span class=&#34;math inline&#34;&gt;\(H_0\)&lt;/span&gt; es falsa”.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El nivel de &lt;strong&gt;significancia estadística&lt;/strong&gt; o nivel &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; es la probabilidad de rechazar la hipótesis nula cuando es cierta. Un nivel de confianza del 95% significa que, si repetiéramos el experimento muchas veces, el 95% de las veces que obtengamos resultados significativos será porque efectivamente la propuesta alternativa mejora el ratio de la propuesta de control, y solo un 5% de las veces obtendremos un falso positivo significativo.&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; es la probabilidad de no rechazar la hipótesis nula cuando es falsa, aunque normalmente se suele hablar de &lt;strong&gt;potencia estadística&lt;/strong&gt; (definida como 1 - &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;), que es la probabilidad de rechazar la hipótesis nula cuando es falsa. Por ejemplo, planificar un experimento para que tenga una potencia del 80% implica que, si repetimos muchas veces la comparación del grupo de control con una variante que en realidad sí que mejora el ratio de venta, obtendremos resultados significativos el 80% de las veces. Es la potencia de la lupa, nuestra capacidad para distinguir con precisión las diferentes tasas de conversión de los dos grupos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Con todo lo explicado arriba, es fácil ver que a la hora de evaluar los resultados del test podemos tener cuatro casos diferentes:
* a) Verdadero positivo: que los resultados nos indiquen que la variante ha sido un éxito y realmente, si pudiéramos hacer el experimento con toda la población, veríamos que efectivamente el nuevo diseño lleva a una mejor tasa de conversión.
* b) Verdadero negativo: que los resultados nos indiquen que la variante no produce ningún cambio y efectivamente sea así.
* c) Falso positivo (error tipo I): que los resultados nos indiquen que la variante ha sido un éxito, pero en realidad este resultado se deba simplemente al azar.
* d) Falso negativo (error tipo II): que los resultados nos indiquen que la variante no produce ningún cambio, pero en realidad sí que lo produce y lo que ocurre es que no hemos obtenido suficiente muestra.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Plots/ConfusionMatrix.png&#34; /&gt;&lt;/p&gt;
&lt;figcaption&gt;
Imagen de &lt;a href=&#34;https://en.wikipedia.org/wiki/Confusion_matrix&#34;&gt;Wikipedia&lt;/a&gt;
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;tamano-muestral&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tamaño muestral&lt;/h2&gt;
&lt;p&gt;¿Qué papel juega el tamaño muestral en un test A/B? &lt;strong&gt;Cuanta más muestra, menos incertidumbre&lt;/strong&gt;.
La fórmula con la que podemos calcular la incertidumbre asociada a una medición es la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \hat{p} \pm z \sqrt{\frac{\hat{p}(1-\hat{p})}{n}} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;siendo &lt;span class=&#34;math inline&#34;&gt;\(\hat{p}\)&lt;/span&gt; la proporción observada, z el Z-Score y n el tamaño muestral. El &lt;a href=&#34;http://www.z-table.com/&#34;&gt;Z-score&lt;/a&gt; de una medida nos indica dónde se ubica ésta en la distribución, es decir, cómo de lejos en número de desviaciones estándar está esa medida de la media.&lt;/p&gt;
&lt;p&gt;Una cuestión habitual a la hora de diseñar un test A/B es: ¿Qué tamaño muestral necesito?
Para encontrar la muestra necesaria para nuestro experimento podemos usar la función de R &lt;code&gt;power.prop.test&lt;/code&gt; que acepta como argumentos el tamaño muestral, las tasas de éxito de nuestros grupos, la significancia y la potencia estadística. De ellos, dados cuatro nos dará el quinto. De esta manera se convierte en la herramienta perfecta para diseñar un test estadístico de este tipo: Podemos encontrar qué tamaño muestral nos permitiría observar cierto efecto dadas unas tolerancias determinadas al error, o encontrar qué potencia estadística tendrá un test con una diferencia entre ratios y un tamaño muestral dados.
Con esta herramienta llegamos a otro concepto importante: Definimos el MED (del inglés Minimum Detectable Effect) como el mínimo efecto significativo que podremos detectar dado un tamaño muestral y unas condiciones dadas de significancia. Este concepto deja intuir otra idea quizá implícita pero sencilla de entender: Para poder ser capaces de distinguir mejoras pequeñas de rendimiento deberemos tener una muestra suficientemente grande, pues si no, es fácil que cometamos un error de tipo II (que la mejora exista pero no seamos capaces de verla).&lt;/p&gt;
&lt;p&gt;Dados los cuatro posibles escenarios anteriores, diseñaremos adecuadamente el test teniendo en cuenta las consecuencias de los distintos errores. ¿Cuáles son las consecuencias de concluir que la nueva campaña de marketing funciona mejor que la anterior? ¿Cuáles son las consecuencias de tomar la decisión de desechar la nueva y efectiva campaña porque no hemos obtenido resultados concluyentes debido al tamaño insuficiente de la muestra?
Este tipo de preguntas son las que debemos de respondernos a la hora de calibrar la tolerancia que tenemos a los errores &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; y &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;. Y para esto no hay una única respuesta válida. Normalmente dependerá de los riesgos que estemos dispuestos a correr y las consecuencias de cada tipo de error: No es lo mismo vivir engañado pensando que tu nueva campaña de marketing aumentará las ventas un 10% que concluir y publicar en una revista científica que has encontrado la cura del cáncer cuando lo único que estás viendo en tus datos es ruído estadístico y has sido &lt;a href=&#34;https://en.wikipedia.org/wiki/Fooled_by_Randomness&#34;&gt;engañado por el azar&lt;/a&gt;. Por tanto, estos parámetros son específicos del dominio en el que trabajamos.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;son-mis-resultados-significativos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Son mis resultados significativos?&lt;/h2&gt;
&lt;p&gt;Por último, una vez establecida la confianza requerida, dimensionado adecuadamente el experimento y recogidos los datos, la pregunta que intentamos resolver ahora es: ¿Cómo de probable es que hayamos obtenido resultados positivos por pura casualidad, y que realmente los ratios de conversión de ambos grupos sea idéntica, pero hemos tenido malísima suerte en las medidas?&lt;/p&gt;
&lt;p&gt;Para saber si hemos obtenido un resultado estadísticamente significativo podemos realizar un test de hipótesis con la función de R &lt;code&gt;prop.test&lt;/code&gt;.
Además, desarrollé una &lt;a href=&#34;https://pabloct.shinyapps.io/StatisticalSignificance/&#34;&gt;shiny app&lt;/a&gt; que nos permite realizar ese cálculo sin usar R.
El concepto importante aquí es el p-valor. Supongamos que hemos obtenido que nuestra variante lleva el ratio de conversión del 5% al 8%. ¿Es una mejora significativa? Para responder a la pregunta nos apoyamos en un test estadístico llamado Z-test que, dados los ratios y los tamaños muestrales de cada grupo nos dará &lt;strong&gt;la probabilidad de haber obtenido un resultado tan extremo o más por puro azar&lt;/strong&gt;, suponiendo que en realidad no hay ninguna diferencia entre nuestra variante y el grupo de control. &lt;strong&gt;Esa probabilidad es el p-valor&lt;/strong&gt;.
Únicamente falta comparar el p-valor obtenido con nuestra tolerancia máxima al error de tipo I (&lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;) del que hemos hablado antes: &lt;strong&gt;Si el p-valor es menor que &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; rechazaremos la hipótesis nula&lt;/strong&gt;, esto es, daremos nuestro resultado por significativo. En el caso contrario (p-value &amp;gt; &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;) no concluiremos que la variante no mejora, únicamente podremos decir que no hemos conseguido encontrar evidencias de que sí lo haga. Análogamente, en los juicios, cuando no se han encontrado pruebas de que el acusado sea culpable se usa el término &lt;em&gt;no culpable&lt;/em&gt; ya que eso no quiere decir que sea inocente. &lt;a href=&#34;https://en.wikipedia.org/wiki/Evidence_of_absence&#34;&gt;Absence of evidence is not evidence of absence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Dada la incertidumbre asociada a la propia medición, podemos visualizar la distribución de probabilidad de la tasa de conversión de cada grupo con un gráfico como el siguiente: dos distribuciones binomiales centradas en los valores medidos y cómo se relacionan gráficamente los principales conceptos discutidos en este artículo: &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; y p-valor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Plots/ErrorTypes.png&#34; /&gt;&lt;/p&gt;
&lt;figcaption&gt;
Tipos de error, potencia y tamaño del efecto
&lt;/figcaption&gt;
&lt;p&gt;Además, he desarrollado una pequeña aplicación para saber si nuestros resultados son significativos o no, y aprender cómo se relacionan estos conceptos (Potencia estadística, errores &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; y &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;, tamaño muestral y tamaño del efecto). &lt;a href=&#34;https://pabloct.shinyapps.io/StatisticalSignificance/&#34;&gt;Échale un ojo!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>¡Despliega tu R Shiny App en AWS gratis y en 5 minutos!</title>
      <link>/es/post/despliega-r-shiny-app-aws-gratis-5minutos/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/es/post/despliega-r-shiny-app-aws-gratis-5minutos/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#preparar-nuestra-shiny-app&#34;&gt;1. Preparar nuestra Shiny APP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#levantar-la-maquina-ec2-en-aws&#34;&gt;2. Levantar la máquina EC2 en AWS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#intro-launch-instance&#34;&gt;2.1 Intro &amp;amp; Launch Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#configuracion-de-la-instancia&#34;&gt;2.2 Configuración de la Instancia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#generar-la-key&#34;&gt;2.3 Generar la key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conexion-a-nuestra-instancia.&#34;&gt;3. Conexión a nuestra instancia.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#descargar-putty&#34;&gt;3.1 Descargar Putty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#transformar-la-clave-con-puttygen&#34;&gt;3.2 Transformar la clave con PuttyGen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#configurar-la-conexion&#34;&gt;3.3 Configurar la conexión&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#instalar-r-y-shiny-server-en-la-maquina-ec2-aws&#34;&gt;4. Instalar R y Shiny Server en la máquina EC2 AWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#desplegar-nuestra-shiny-app&#34;&gt;5. Desplegar nuestra Shiny App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;featured.jpg&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;preparar-nuestra-shiny-app&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1. Preparar nuestra Shiny APP&lt;/h1&gt;
&lt;p&gt;En primer lugar prepararemos la app de Shiny. Vamos a dejar la aplicación lista y preparada para ser desplegada en AWS.
Para ello recomendamos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;minimizar el número de librerias a instalar,&lt;/li&gt;
&lt;li&gt;comenzar la app con una función del estilo &lt;code&gt;LoadOrInstallRequiredPackages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;despliega tu app en Github/GitLab&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como veremos en breve, no es totalmente necesario tener la app en un repositorio, aunque sí altamente recomendable. Explicaremos una alternativa de transferencia de ficheros a la máquina de AWS.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;levantar-la-maquina-ec2-en-aws&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2. Levantar la máquina EC2 en AWS&lt;/h1&gt;
&lt;div id=&#34;intro-launch-instance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.1 Intro &amp;amp; Launch Instance&lt;/h2&gt;
&lt;p&gt;Como pincelada, comentar qe el servicio de EC2 dentro de la cloud de Amazon nos facilita instanciar máquinas virtuales con imágenes preconfiguradas.&lt;/p&gt;
&lt;p&gt;Para ello, lo primero que debemos hacer es crearnos una cuenta en AWS, si no la tenemos ya. Amazon nos permite el acceso a un Tier Gratuito con acceso a la gama baja de diferentes servicios, sin incurrir en coste alguno. Aun así, en el registro deberemos introducir una tarjeta como requisito, pero todo lo que explicaremos a continuación no tendrá coste alguno.&lt;/p&gt;
&lt;p&gt;Abre en una nueva pestaña &lt;a href=&#34;https://portal.aws.amazon.com/billing/signup?nc2=h_ct&amp;amp;src=header_signup&amp;amp;redirect_url=https%3A%2F%2Faws.amazon.com%2Fregistration-confirmation#/start&#34;&gt;https://portal.aws.amazon.com&lt;/a&gt; y comienza el proceso de alta.&lt;/p&gt;
&lt;img src=&#34;./aws_planes.JPG&#34; height=&#34;350px&#34; width=&#34;450px&#34; /&gt;
&lt;figcaption&gt;
Planes AWS
&lt;/figcaption&gt;
&lt;p&gt;Seleccionamos el &lt;em&gt;Basic Plan&lt;/em&gt;, ya que nos permite desplegar de manera gratuíta el tiempo equivalente a tener 1 máquina levantada al mes. Una vez hayamos completado el registro, nos llevará a un portal donde tendremos acceso a todos los productos de AWS (EC2, S3, Lambda…)&lt;/p&gt;
&lt;p&gt;En la barra de búsqueda, buscamos el servicio EC2. Haremos click en él como se muestra a continuación.&lt;/p&gt;
&lt;img src=&#34;./ec2.jpg&#34; height=&#34;400px&#34; width=&#34;500px&#34; /&gt;
&lt;figcaption&gt;
Seleccionamos el servicio EC2
&lt;/figcaption&gt;
&lt;p&gt;Esto nos lleva a la home de EC2, donde deberemos buscar el botón de &lt;em&gt;Launch instance&lt;/em&gt;&lt;/p&gt;
&lt;img src=&#34;./launch_instance.jpg&#34; height=&#34;400px&#34; width=&#34;500px&#34; /&gt;
&lt;figcaption&gt;
Lanzamos la instancia de EC2
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;configuracion-de-la-instancia&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.2 Configuración de la Instancia&lt;/h2&gt;
&lt;p&gt;Ahora debemos configurar la máquina que vamos a levantar. En primer lugar la AMI (Amazon Machine Image), que como comentábamos antes, es una preconfiguración de la máquina que nos permite agilizar el &lt;em&gt;set up&lt;/em&gt;.
En esta ocasión elegiremos un &lt;strong&gt;Ubuntu 18.04&lt;/strong&gt;.&lt;/p&gt;
&lt;img src=&#34;./ubuntu.jpg&#34; height=&#34;650px&#34; width=&#34;600px&#34; /&gt;
&lt;figcaption&gt;
Ubuntu 18.04 x86
&lt;/figcaption&gt;
&lt;p&gt;A continuación, debemos elegir las características de la máquina a desplegar, el &lt;em&gt;instance type&lt;/em&gt;.
Para poder hacer todo el proceso de manera gratuíta, elegimos la &lt;strong&gt;t2.micro&lt;/strong&gt; ya que es la única que podremos levantar sin coste.&lt;/p&gt;
&lt;img src=&#34;./t2_micro.jpg&#34; height=&#34;750px&#34; width=&#34;700px&#34; /&gt;
&lt;figcaption&gt;
El free tier incluye una máquina t2.micro
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;generar-la-key&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.3 Generar la key&lt;/h2&gt;
&lt;p&gt;El último paso para tener nuestra instancia levantada es guardarnos la &lt;em&gt;private key&lt;/em&gt; usada para conectarnos a la instancia de manera segura. Descargaremos un arcivo con extensión &lt;strong&gt;.pem&lt;/strong&gt;, que usaremos posteriormente en para conectarnos y que no debemos perder.&lt;/p&gt;
&lt;img src=&#34;./aws_key_pair.jpg&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;
&lt;figcaption&gt;
Creamos el key pair (o utilizamos una existente)
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conexion-a-nuestra-instancia.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3. Conexión a nuestra instancia.&lt;/h1&gt;
&lt;p&gt;Hasta este punto, ya tenemos nuestra instancia lanzada y será cuestión de minutos que pase de estado &lt;em&gt;inizialiting&lt;/em&gt; a &lt;em&gt;running&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Cuando la tengamos corriendo, ya podremos conectarnos a ella. ¿Cómo? A contunuación os mostramos cómo hacerlo desde Windows.&lt;/p&gt;
&lt;div id=&#34;descargar-putty&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.1 Descargar Putty&lt;/h2&gt;
&lt;p&gt;Putty es un cliente SSH que nos permite conectarnos desde Windows a estas máquinas EC2.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.putty.org/&#34;&gt;https://www.putty.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Con esto descargamos PuttyGen (que usaremos en primer lugar para transformar la &lt;em&gt;key&lt;/em&gt; descargada de AWS) y el propio Putty (que usaremos para conectarnos)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;transformar-la-clave-con-puttygen&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.2 Transformar la clave con PuttyGen&lt;/h2&gt;
&lt;p&gt;Una vez abierto PuttyGen, lo único que debemos hacer es &lt;em&gt;clikear&lt;/em&gt; en &lt;em&gt;Load&lt;/em&gt; y seleccionar la clave con extensión &lt;em&gt;.pem&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;En cuanto al tipo de clave a generar, bastará con dejarlo en RSA. Por último, hacer click en &lt;strong&gt;Save private key&lt;/strong&gt;, aceptar a no generar una &lt;em&gt;passphrase&lt;/em&gt; y asignarle un nombre, que puede ser el mismo que le pusimos a la descargada de AWS (automáticamente asigna una extensión &lt;em&gt;.ppk&lt;/em&gt;).&lt;/p&gt;
&lt;img src=&#34;./putty_gen.jpg&#34; height=&#34;250px&#34; width=&#34;400px&#34; title=&#34;AAAAAAAAAAAAAAAAAAAA&#34; /&gt;
&lt;figcaption&gt;
Putty Gen. Transformando la key descargada de AWS
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;configurar-la-conexion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.3 Configurar la conexión&lt;/h2&gt;
&lt;p&gt;Cerramos PuttyGen y abrimos Putty. Iremos Conection -&amp;gt; SSH -&amp;gt; Auth y cargarmos la clave ppk que acabamos de generar.
Volvemos a &lt;code&gt;Session&lt;/code&gt; e introducimos la IP. Podemos ponerle un nombre y darle a &lt;em&gt;Save&lt;/em&gt;.&lt;/p&gt;
&lt;img src=&#34;./putty.jpg&#34; height=&#34;500px&#34; width=&#34;400px&#34; /&gt;
&lt;figcaption&gt;
Cargamos la private key para la autenticación
&lt;/figcaption&gt;
&lt;img src=&#34;./basic_putty.jpg&#34; height=&#34;500px&#34; width=&#34;400px&#34; /&gt;
&lt;figcaption&gt;
Seteamos la IP, Save &amp;amp; Open
&lt;/figcaption&gt;
&lt;p&gt;Con esto, sólo queda darle a &lt;em&gt;Open&lt;/em&gt; y login como user: &lt;code&gt;ubuntu&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Got it!&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;instalar-r-y-shiny-server-en-la-maquina-ec2-aws&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;4. Instalar R y Shiny Server en la máquina EC2 AWS&lt;/h1&gt;
&lt;p&gt;Una vez dentro, ejecutamos los siguientes comandos. Estamos configurando la máquina, descargando R, sus dependencias, Shiny, los paquetes necesarios y Shiny Server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository &amp;#39;deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/&amp;#39;
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
sudo apt-get update
sudo apt-get install r-base 

sudo add-apt-repository ppa:marutter/c2d4u3.5
sudo apt-get update

sudo apt-get install -y gfortran libreadline6-dev libx11-dev libxt-dev libcairo2-dev libbz2-dev liblzma-dev libcurl4-openssl-dev cmake libssl-dev libxml2 libxml2-dev r-cran-httpuv

sudo su - \
-c &amp;quot;R -e \&amp;quot;install.packages(&amp;#39;shiny&amp;#39;, repos=&amp;#39;https://cran.rstudio.com/&amp;#39;)\&amp;quot;&amp;quot;

$ sudo apt-get install gdebi-core
$ wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.13.944-amd64.deb
$ sudo gdebi shiny-server-1.5.13.944-amd64.deb&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En caso de que tu aplicación no comience checkeando los paquetes que se va a usar, en este paso utilizaremos&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo su -c &amp;quot;R -e \&amp;quot;install.packages(&amp;#39;shiny&amp;#39;, repos=&amp;#39;https://cran.rstudio.com/&amp;#39;)\&amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Con esto, ya tenemos el Shiny Server escuchando en el puerto 3838. Pero aun no podremos acceder a &lt;a href=&#34;http://ip_de_la_maquina_de_ec2:3838&#34; class=&#34;uri&#34;&gt;http://ip_de_la_maquina_de_ec2:3838&lt;/a&gt; ya que como último paso debemos de abrir este puerto en el &lt;em&gt;firewall&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Para ello iremos nuestras instancias:&lt;/p&gt;
&lt;img src=&#34;./security_groups.jpg&#34; height=&#34;700px&#34; width=&#34;500px&#34; /&gt;
&lt;figcaption&gt;
Dentro del panel de instancias, scroll lateral a la derecha
&lt;/figcaption&gt;
&lt;p&gt;Instanctias -&amp;gt; Security Group -&amp;gt; Actions -&amp;gt; Edit inbound rules&lt;/p&gt;
&lt;img src=&#34;./custom_tcp.jpg&#34; height=&#34;700px&#34; width=&#34;500px&#34; /&gt;
&lt;figcaption&gt;
Añadimos nueva regla TCP, al puerto 3838 y para todas las IPs de origen
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;div id=&#34;desplegar-nuestra-shiny-app&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;5. Desplegar nuestra Shiny App&lt;/h1&gt;
&lt;p&gt;Cómo comentábamos, lo ideóneo sería tener nuestra aplicación en un repositorio.&lt;/p&gt;
&lt;p&gt;Si dominamos git, símplemente debemos clonar el repo en la ruta &lt;code&gt;/srv/shiny-server&lt;/code&gt;. También lo podemos hacer en el root y crear un link dentro de esa ruta.&lt;/p&gt;
&lt;p&gt;Aclarar que en esa ruta debe estar la carpeta contenedora conel nombre de la app, y la propia app de Shiny, ya sea en formato app.R o server.R/ui.R&lt;/p&gt;
&lt;p&gt;Un ejemplo sería el siguiente:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /srv/shiny-server
git clone https://github.com/CarlosVecina/Proyecto-Multivariate-Distribution.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Con esto, ya tenemos nuestra app junto con la app de demo. Si entramos en &lt;a href=&#34;http://3.133.94.92:383&#34; class=&#34;uri&#34;&gt;http://3.133.94.92:383&lt;/a&gt; llegaremos al root con todas las aplicaciones. Para acceder (y linkear/meter en un iframe…) a una app específica deberemos utilizar la url completa &lt;a href=&#34;http://3.133.94.92:3838/Proyecto-Multivariate-Distribution&#34; class=&#34;uri&#34;&gt;http://3.133.94.92:3838/Proyecto-Multivariate-Distribution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una segunda opción menos recomendable sería usar &lt;a href=&#34;https://winscp.net/eng/docs/lang:es&#34;&gt;Winscp&lt;/a&gt; para transferir los archivos.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;En el próximo post trataremos cómo acceder a nuestra aplicación de Shiny en AWS con tu url personal, convertirlo en una conexión https, configurar los puertos…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Keep you posted&lt;/em&gt; en &lt;a href=&#34;https://typethepipe.com&#34;&gt;TypeThePipe&lt;/a&gt;&lt;/p&gt;
&lt;style&gt;
p {
  word-spacing: 3px;
  text-indent: 20px;
  text-align: justify;
}
.page-subtitle {
  text-align: left  !important;
    text-indent: 0px !important;
}
.card-text {
  text-align: left  !important;
    text-indent: 0px !important;
}
&lt;/style&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>¡Aumenta la velocidad de tus scripts de R!. Optimiza la lectura, escritura y almacenamiento de grandes datasets con el paquete FST</title>
      <link>/es/vizs-and-tips/aumenta-velocidad-scripts-r-lectura-escritura-fst-r/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/aumenta-velocidad-scripts-r-lectura-escritura-fst-r/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;&lt;img src=&#34;featured.png&#34; height=&#34;300px&#34; width=&#34;600px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;¿Quieres guardar tu modelo de DL o un gran dataset? A continuación te mostramos la manera que hemos encontrado de optimizar la lectura, la escritura y almacenaje de data frames con el paquete FST. Si incorporar un paquete a tu &lt;em&gt;environment&lt;/em&gt; no te supone un gran problema, te lo recomendamos.&lt;/p&gt;
&lt;p&gt;En la repo del paquete hay un pequeño &lt;em&gt;benchmark&lt;/em&gt; reliazado por sus autores. Queremos comprobarlo por nosotros mismos y vamos a comparar su rendimiento. Para ello compararemos su &lt;em&gt;performance&lt;/em&gt; con el de las funciones que hasta hoy eran parte de nuestra caja de herramientas de R para la lectura y escritura de ficheros en proyectos de datos. Veamos:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;big_dataset &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;nrow&lt;/span&gt;() &lt;span class=&#34;co&#34;&gt;# 700k filas, 15 columnas(8 factor, 4int, 3 logi)&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(microbenchmark)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(readr)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(fst)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-4&#34; title=&#34;4&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;kw&#34;&gt;microbenchmark&lt;/span&gt;(&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-6&#34; title=&#34;6&#34;&gt;  &lt;span class=&#34;kw&#34;&gt;write.csv&lt;/span&gt;(big_dataset, &lt;span class=&#34;kw&#34;&gt;paste0&lt;/span&gt;(path,&lt;span class=&#34;st&#34;&gt;&amp;quot;big_dataset.csv&amp;quot;&lt;/span&gt;),),     &lt;span class=&#34;co&#34;&gt;# utils&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-7&#34; title=&#34;7&#34;&gt;  &lt;span class=&#34;kw&#34;&gt;write_csv&lt;/span&gt;(big_dataset, &lt;span class=&#34;kw&#34;&gt;paste0&lt;/span&gt;(path,&lt;span class=&#34;st&#34;&gt;&amp;quot;big_dataset.csv&amp;quot;&lt;/span&gt;)),     &lt;span class=&#34;co&#34;&gt;# readr&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-8&#34; title=&#34;8&#34;&gt;  &lt;span class=&#34;kw&#34;&gt;write_csv&lt;/span&gt;(big_dataset, &lt;span class=&#34;kw&#34;&gt;paste0&lt;/span&gt;(path,&lt;span class=&#34;st&#34;&gt;&amp;quot;big_dataset.csv.gz&amp;quot;&lt;/span&gt;),), &lt;span class=&#34;co&#34;&gt;# readr GZ&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-9&#34; title=&#34;9&#34;&gt;  &lt;span class=&#34;kw&#34;&gt;saveRDS&lt;/span&gt;(big_dataset, &lt;span class=&#34;kw&#34;&gt;paste0&lt;/span&gt;(path,&lt;span class=&#34;st&#34;&gt;&amp;quot;big_dataset.RDS&amp;quot;&lt;/span&gt;)),       &lt;span class=&#34;co&#34;&gt;# utils&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-10&#34; title=&#34;10&#34;&gt;  &lt;span class=&#34;kw&#34;&gt;write_rds&lt;/span&gt;(big_dataset, &lt;span class=&#34;kw&#34;&gt;paste0&lt;/span&gt;(path,&lt;span class=&#34;st&#34;&gt;&amp;quot;big_dataset.RDS&amp;quot;&lt;/span&gt;)),     &lt;span class=&#34;co&#34;&gt;# readr&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-11&#34; title=&#34;11&#34;&gt;  &lt;span class=&#34;kw&#34;&gt;write_fst&lt;/span&gt;(big_dataset, &lt;span class=&#34;kw&#34;&gt;paste0&lt;/span&gt;(path,&lt;span class=&#34;st&#34;&gt;&amp;quot;big_dataset.fst&amp;quot;&lt;/span&gt;)),     &lt;span class=&#34;co&#34;&gt;# fst&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-12&#34; title=&#34;12&#34;&gt;  &lt;span class=&#34;dt&#34;&gt;times =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-13&#34; title=&#34;13&#34;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;co&#34;&gt;##  Unit: milliseconds&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;co&#34;&gt;##            min           mean              median        max               neval     file_size&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;co&#34;&gt;##utils     10943.1161      11232.20073   11098.66610     12011.1538    10        109 MB&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;co&#34;&gt;##readr     3140.4450       3442.92772    3388.14280      3768.4109     10        109 MB&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;co&#34;&gt;##readrGZ   6993.8850       7332.31976    7260.95040      7946.9233     10        23  MB&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-6&#34; title=&#34;6&#34;&gt;&lt;span class=&#34;co&#34;&gt;##base      4800.3516       5122.22345    5024.69395      5833.9807     10        15  MB&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;co&#34;&gt;##readr     187.0765        210.74584     211.70760     246.6369      10        46  MB&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;fst        60.3065         87.30611      74.94375      154.7718      10        16  MB&amp;quot;&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¡Wow! Los resultados son impresionantes&lt;/strong&gt;, incluso mejores que los expuestos en la web de los creadores.&lt;/p&gt;
&lt;p&gt;Podemos apreciar una mejora &lt;em&gt;x3&lt;/em&gt; y &lt;em&gt;x50&lt;/em&gt; en el &lt;em&gt;performance&lt;/em&gt; comparado con las funciones readr::write_rds() y base R saveRDS()!&lt;/p&gt;
&lt;p&gt;Una incremento increible de un &lt;em&gt;x100 performance&lt;/em&gt; entre fst y las funciones que trabajan con csv y que anteriormente utilizábamos, aunque realmente esta no es una comparación del todo justa al tratarse de dos extensiones completamente diferentes (csv y bin).&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Y tú? ¿Estás pensando en incluir FST al &lt;em&gt;toolbox&lt;/em&gt; de tu proyecto en R también?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Descartando columnas basándonos en su porcentaje de NAs</title>
      <link>/es/vizs-and-tips/descartando-columnas-porcentaje-nas-r-tidyverse/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/descartando-columnas-porcentaje-nas-r-tidyverse/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;&lt;img src=&#34;featured.png&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Los NAs pueden ser muy informativos, y estudiar cómo se distribuyen en base a una segunda variable suele ser una genial idea. Esto puede aportarnos un extra de información o mostrarnos un fenómeno que de otra manera(mediante imputación o descarte de observaciones) nos pasaría desapercibido.&lt;/p&gt;
&lt;p&gt;Sin embargo, para un estudio preliminar o tras haber analizado los valores faltantes, nos encontramos casos en los que queremos quitarlos de manera automatizada basándonos en el porcentaje de NAs.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../../vizs-and-tips/recuento-nas-por-columna-r&#34;&gt;En este artículo&lt;/a&gt; hablamos y comparamos diferentes funciones de BaseR vs Tidy &amp;amp; Purrr para contar el número de NAs por columna.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Cuanto cuesta no salir del &lt;em&gt;pipeflow&lt;/em&gt;?&lt;/strong&gt; Dependerá del número de variables, del porcentaje que elijas como frontera y la distribución de NAs a lo largo de las variables, &lt;strong&gt;pero no suele ser más que unos pocos nanosegundos.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;co&#34;&gt;# library(microbenchmark)  Puedes comparar su performance en diferentes datasets&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;airquality &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;select_if&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;mean&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(.)) &lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;0.2&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;airquality &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;select&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;colMeans&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(.)) &lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;0.2&lt;/span&gt;))&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;airquality[&lt;span class=&#34;kw&#34;&gt;lapply&lt;/span&gt;(airquality, &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(x) &lt;span class=&#34;kw&#34;&gt;mean&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(x))) &lt;span class=&#34;op&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;0.2&lt;/span&gt;]&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;¿Qué forma eliges tú?&lt;/p&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>¡10 consejos para triunfar en tu próximo Kaggle, Datathon o competición de datos!</title>
      <link>/es/post/10-consejos-datathon-kaggle-data-science/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/es/post/10-consejos-datathon-kaggle-data-science/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#establece-tu-objetivo-y-revisa-los-recursos-habilidades-tiempo-acceso-a-maquinas-con-los-que-cuentas.&#34;&gt;&lt;strong&gt;1. Establece tu objetivo y revisa los recursos (habilidades, tiempo, acceso a máquinas…) con los que cuentas.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#eleccion-del-tema-o-cduso.&#34;&gt;&lt;strong&gt;2. Elección del tema o CdUso.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#construye-tu-equipo-de-manera-consciente.-usa-herramientas-para-compartir-codigoarchivos.&#34;&gt;&lt;strong&gt;3. Construye tu equipo de manera consciente. Usa herramientas para compartir código/archivos.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#investigacion-previa-y-profunda-sobre-el-caso-de-uso-en-concreto.&#34;&gt;&lt;strong&gt;4. Investigación previa y profunda sobre el caso de uso en concreto.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#analisis-exploratorio-de-los-datos.-recuerda-que-normalmente-no-son-los-unicos-que-puedes-usar.&#34;&gt;&lt;strong&gt;5. Análisis exploratorio de los datos. Recuerda que (normalmente) no son los únicos que puedes usar.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#establecer-la-estructura-del-proyecto-y-del-codigo.&#34;&gt;&lt;strong&gt;6. Establecer la estructura del proyecto y del código.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lanzar-los-primeros-modelos.&#34;&gt;&lt;strong&gt;7. Lanzar los primeros modelos.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#validacion-cruzada-oos-y-backtesting.&#34;&gt;&lt;strong&gt;8. Validación cruzada, OOS y backtesting.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interpretabilidad-de-modelos.-evaluacion-de-resultados-desde-el-punto-de-vista-practico-yo-negocio.&#34;&gt;&lt;strong&gt;9. Interpretabilidad de modelos. Evaluación de resultados desde el punto de vista práctico y/o negocio.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#escribir-una-memoria-con-puntos-fuertes-y-puntos-a-mejorar-detectados-que-te-sirvan-de-partida-en-el-proximo-reto.&#34;&gt;&lt;strong&gt;10. Escribir una memoria con puntos fuertes y puntos a mejorar detectados, que te sirvan de partida en el próximo reto.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;featured.png&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;¿Pensando en inscribirte en un Datathon o competición de datos? ¡En este post os traemos 10 consejos sobre los puntos clave para conseguir grandes resultados!&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;establece-tu-objetivo-y-revisa-los-recursos-habilidades-tiempo-acceso-a-maquinas-con-los-que-cuentas.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;1. Establece tu objetivo y revisa los recursos (habilidades, tiempo, acceso a máquinas…) con los que cuentas.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;Comenzamos por un punto esencial. Dependiendo de tu perfil y de la competición, deberás plantearte a priori qué pretendes conseguir participando en el reto. Puede ser aprender y mejorar en un determinado campo o tecnología, conseguir el premio, quedar entre los 3 primeros para incluirlo en tu CV o simplemente por diversión. Cualquiera que sea está bien.&lt;/p&gt;
&lt;p&gt;Lo que recomendamos es evaluarlo de manera sincera, ya que será bastante el tiempo invertido y &lt;strong&gt;tener tu objetivo presente te ayudará en los momentos de menor motivación.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Por ejemplo, si tu objetivo no es ganar la competición (el caso de participar en tu primer Kaggle) seguramente prefieras no entrar en una espiral de ‘hiperoptimización’ de hiperparámetros para rascar mínimas mejoras en la métrica de error, sino que quizá prefieras estudiar y aplicar nuevas técnicas o algoritmos, aprender sobre desarrollo y estructuración de un proyecto de Data Science o integrar fuentes complementarias de datos.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;eleccion-del-tema-o-cduso.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;2. Elección del tema o CdUso.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;choosing_simpson.gif&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ligado con el anterior punto, dado que vamos a dedicar muchos esfuerzos en este proyecto, ¿cómo no elegir un tema, campo o caso de uso que nos motive? Afortunadamente, desde muchas organizaciones y plataformas se están lanzando diferentes e interesantes competiciones. Kaggle es uno de los máximos exponentes de estas plataformas, pero también existen otras, las cuales presentamos &lt;a href=&#34;../../vizs-and-tips/plataformas-donde-participar-competiciones-de-datos&#34;&gt;aquí&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;construye-tu-equipo-de-manera-consciente.-usa-herramientas-para-compartir-codigoarchivos.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;3. Construye tu equipo de manera consciente. Usa herramientas para compartir código/archivos.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;Dependiendo de los dos puntos anteriores, especialmente del primero, según tu objetivo deberás elegir a tu equipo de manera consecuente. Este es un tema que no se suele comentar, pero consideramos importante prestarle la debida atención.&lt;/p&gt;
&lt;p&gt;Elige un compañero o amigo con el que te lleves realmente bien y os motivéis mutuamente si tu objetivo es aprender sobre un tema o tecnología nueva. Prioriza a alguien que comparta tus intereses en el caso que desees dedicarle tiempo a profundizar y masterizar un tema, tecnología o algoritmo muy concreto.&lt;/p&gt;
&lt;p&gt;Si el proyecto lo requiere, y pretendes optar al premio o a posiciones altas, te recomendamos elegir un compañero que complemente tus habilidades. En el caso de que no se requiera multidisciplinariedad, opta por aquellos que tengan un nivel similar al tuyo. Si es posible, ligeramente superior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Eligiendo tu equipo de manera consciente&lt;/strong&gt; lograrás minimizar tiranteces y conflictos de objetivos, maximizando el retorno del tiempo invertido.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;investigacion-previa-y-profunda-sobre-el-caso-de-uso-en-concreto.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;4. Investigación previa y profunda sobre el caso de uso en concreto.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;pez_tecleando.gif&#34; height=&#34;100px&#34; width=&#34;200px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Una vez formado el equipo, os recomendamos comenzar a &lt;strong&gt;investigar el negocio o el contexto en el que se enmarca vuestro proyecto.&lt;/strong&gt; Esto permitirá plantear mejor el trabajo, extraer un valor muy superior a los datos y os evitará iteraciones en el proceso diseñar-implementar-evaluar al partir de premisas más claras. De esta manera dejareis al lado una mala interpretación de conceptos básicos, lo cual puede ser letal.&lt;/p&gt;
&lt;p&gt;Un ejemplo. Si la competición trata sobre predecir el número de visitas o el número de contrataciones de determinados productos en un comercio online, en base a la navegación recogida por Google Analytics, debéis controlar el comportamiento de esta fuente de datos. Conocer el significado de tasa de rebote, las mecánicas desde que un usuario se conecta por primera vez y se le asigna una cookie hasta que convierte, borrado de cookies, diferentes casuísticas de registros nulos, bots, que la &lt;em&gt;source&lt;/em&gt; (para conocer la fuente de donde viene el visitante) puede ser ruidosa porque en caso de dudas se asigna como &lt;em&gt;direct&lt;/em&gt;…&lt;/p&gt;
&lt;p&gt;Sin esta serie de conocimientos será difícil &lt;strong&gt;&lt;em&gt;craftear&lt;/em&gt; variables para conseguir un buen &lt;em&gt;performance&lt;/em&gt; de los modelos&lt;/strong&gt;, o lo que es más importante, cualquier resultado que obtengáis es posible que sea malinterpretado. Por lo tanto, todo este &lt;em&gt;background&lt;/em&gt; no es imprescindible para llegar a algún resultado, pero sí lo será para llegar a resultados potentes y realizar una participación de la que acabes orgullosos.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;analisis-exploratorio-de-los-datos.-recuerda-que-normalmente-no-son-los-unicos-que-puedes-usar.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;5. Análisis exploratorio de los datos. Recuerda que (normalmente) no son los únicos que puedes usar.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;Como todo proyecto de datos, consta de una serie de &lt;strong&gt;etapas iterativas&lt;/strong&gt;. Después de investigar sobre el contexto, echareis un primer vistazo a los datos. Si surgen dudas, de nuevo tendréis que investigar para resolverlas.&lt;/p&gt;
&lt;p&gt;Al margen de este recordatorio, la fase exploratoria se centra en conocer cada una de las variables. Como consejo personal, entre otras cosas, nosotros comenzamos midiendo el porcentaje de NAs y la distribución y varianza de las variables. Aquellas que tengan un elevado porcentaje de NAs o una varianza muy pequeña, o bien las apartamos (podría replantearse su entrada en siguientes iteraciones) o bien las &lt;em&gt;encodeamos&lt;/em&gt; de manera dicotómica Si_NA/No_NA o Mayoritaria/No_mayoritaria. Para otro tipo de &lt;em&gt;encodings&lt;/em&gt; &lt;a href=&#34;https://www.kaggle.com/waydeherman/tutorial-categorical-encoding&#34;&gt;ver&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Esta etapa exploratoria varía bastante dependiendo del número de variables que contenga vuestro dataset. En &lt;em&gt;datasets&lt;/em&gt; con 75, 100 o más variables, resultará más complicado hacerse una idea general de las características de cada una de ellas. Enfrentarnos a este tipo de &lt;em&gt;datasets&lt;/em&gt; puede resultar ciertamente abrumador, sin embargo tras una buen estudio, reducción dimensional / eleccion y transformación puede ser que acabéis dando las gracias de no tener sólo 5 o 10 variables(caso en el que se suele llegar a un &lt;em&gt;plateau&lt;/em&gt; de desempeño de los modelos más rápido y mayor homogeneidad en los resultados expuestos por los diferentes equipos).&lt;/p&gt;
&lt;p&gt;Además de esto; &lt;strong&gt;análisis de correlaciones, detección de outliers univariante y multivariante, tests estadísticos preliminares…&lt;/strong&gt; son análisis que os permitirán poner en contexto los datos y modelarlos mejor.&lt;/p&gt;
&lt;p&gt;Por último, recordar que normalmente no hay problema con utilizar &lt;strong&gt;fuentes de datos complementarias&lt;/strong&gt; a las propios de la competición. En algunos casos como Kaggle, lo que se establece es la obligación de comentar y hacer público el uso de estos datos durante la competición.&lt;/p&gt;
&lt;p&gt;Datos demográficos que ayuden a poner en contexto las variables geográficas como código postal o provincia, recoger eventos para aportar explicabilidad a &lt;em&gt;spikes&lt;/em&gt; o comportamientos pasados… son sólo algunos de los ejemplos de datos que se pueden incorporar al &lt;em&gt;dataset&lt;/em&gt; original del reto. Obviamente tendréis que tener en cuenta cuales de estos datos vais a tener y cuales no a la hora de predecir.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;establecer-la-estructura-del-proyecto-y-del-codigo.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;6. Establecer la estructura del proyecto y del código.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;A continuación os mostramos la estructura que suelen tener nuestros proyectos. La &lt;strong&gt;estructuración de los directorios&lt;/strong&gt; dentro de un proyecto de Data Science dependerá de las características del entorno tanto de desarrollo como la posterior productivización, siguiendo principios generales como la modularización del código.
Una estructura bastante generalizada sería la siguiente:&lt;/p&gt;
&lt;p&gt;Projecto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data:
&lt;ul&gt;
&lt;li&gt;1_raw:&lt;/li&gt;
&lt;li&gt;2_processed:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;models:&lt;/li&gt;
&lt;li&gt;notebooks:
&lt;ul&gt;
&lt;li&gt;1_eda:&lt;/li&gt;
&lt;li&gt;2_poc:&lt;/li&gt;
&lt;li&gt;3_modeling:&lt;/li&gt;
&lt;li&gt;4_evaluation:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;src:
&lt;ul&gt;
&lt;li&gt;1_get_data:&lt;/li&gt;
&lt;li&gt;2_processing:&lt;/li&gt;
&lt;li&gt;3_modeling:&lt;/li&gt;
&lt;li&gt;4_evaluation:&lt;/li&gt;
&lt;li&gt;5_helpers:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creemos que esta estructura se podría simplificar un poco dadas las características de un Datathon, en la que no se suele necesitar automatizar la ingesta y el preprocesado de los datos, sino que será una tarea puntual. Además el análisis exploratorio aquí suele tener un papel protagonista, así como el modelado se suele simplificar en un main.exe que ejecute todo el programa llamando a los módulos de preprocesado, &lt;em&gt;train&lt;/em&gt;, &lt;em&gt;test&lt;/em&gt; y evaluación.&lt;/p&gt;
&lt;p&gt;Projecto_Datathon:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data:&lt;/li&gt;
&lt;li&gt;exploratory:&lt;/li&gt;
&lt;li&gt;helpers:&lt;/li&gt;
&lt;li&gt;log:&lt;/li&gt;
&lt;li&gt;main.R / main.py&lt;/li&gt;
&lt;li&gt;outputs:
&lt;ul&gt;
&lt;li&gt;models:&lt;/li&gt;
&lt;li&gt;preds:&lt;/li&gt;
&lt;li&gt;validation:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En cuanto a la &lt;strong&gt;estructura del main&lt;/strong&gt;, solemos llevar a cabo una validación cruzada manual con el objetivo de ganar flexibilidad a la hora de usar modelos de diferente naturaleza y poder &lt;em&gt;stackear&lt;/em&gt; sus predicciones y compararlos. Cierto es que soluciones paquetizadas como scikit-learn o H2O pueden hacer este trabajo en el caso de que el tiempo disponible y características de la competición indiquen su uso. Nuestra propuesta tendría este esqueleto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Carga de entorno (paquetes, módulos y funciones)&lt;/li&gt;
&lt;li&gt;Diferentes craft de variables&lt;/li&gt;
&lt;li&gt;Separación en dataset y datasetOOSample&lt;/li&gt;
&lt;li&gt;Separar el dataset en folds&lt;/li&gt;
&lt;li&gt;Por cada fold:
&lt;ul&gt;
&lt;li&gt;Entrenar con el resto&lt;/li&gt;
&lt;li&gt;Predecir en el fold&lt;/li&gt;
&lt;li&gt;Evaluación&lt;/li&gt;
&lt;li&gt;(En el último fold, entrenar si se quiere modelos de stacking con las predicciones en trainSet de los anteriores modelos)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Predicción OOSample (Comparación de modelos base y de stacking)&lt;/li&gt;
&lt;li&gt;Evaluación&lt;/li&gt;
&lt;li&gt;Predicción del conjunto de test a enviar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lanzar-los-primeros-modelos.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;7. Lanzar los primeros modelos.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;En primer lugar os aconsejamos &lt;strong&gt;centraros en una familia de algoritmos y función de coste que a priori mejor se adapten a los datos y a la variable a predecir&lt;/strong&gt;. Incluso teniendo en cuenta la métrica de error por la que se os va a medir. Es importante sacar los primeros resultados, a ser posible dentro de una estructura similar a la propuesta anteriormente. Las primeras métricas de error os ayudaran en muchos aspectos. Por un lado os pueden dar pistas de &lt;em&gt;bugs&lt;/em&gt; en el código (métricas de error no realistas). También os servirá como base a partir de la cual ir mejorando, y como estamos seguros de que lo haréis, esto será ademañs un &lt;em&gt;boost&lt;/em&gt; de ánimo.&lt;/p&gt;
&lt;p&gt;Os invitamos a buscar en Google sobre las principales familias de algoritmos supervisados (suele ser el caso en estos Datathones) y de las principales funciones de coste a optimizar, dependiendo de si se trata de un problema de clasificación o de regresión.&lt;/p&gt;
&lt;p&gt;Comentar que la participación en el foro y &lt;strong&gt;kernels de Kaggle, hilos de Reddit y videos en Youtube&lt;/strong&gt; será un buen complemento a la lectura de &lt;em&gt;papers&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;validacion-cruzada-oos-y-backtesting.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;8. Validación cruzada, OOS y backtesting.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;Especial mención a las métricas de error. Uno de los puntos a los que de manera personal más importancia le damos, es el &lt;strong&gt;conocer con la mayor precisión posible los intervalos de error (confianza o predicción) de nuestros modelos antes de enviar sus predicciones.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Conocer las precisión de nuestro modelo bajo diferentes escenarios, partes del dataset e incluso datos sintéticos nos hace sentir un especial orgullo. Quizá sea simplemente un objetivo que nos marcamos(tal y como comentamos en el punto 1), pero el hecho de tener la certeza de cuando se baja la métrica de error no se debe a algo espúreo, o lo peor de todo a un &lt;em&gt;bug&lt;/em&gt; o &lt;em&gt;leakage&lt;/em&gt; de información, nos permite desarrollar con tranquilidad. Además en el caso de existir un ranking público y otro privado, controlar tu métrica de evaluación te permite saber con mayor certeza en que percentil te encuentras.&lt;/p&gt;
&lt;p&gt;La mayoría de competiciones suelen ir ligadas a una métrica de error por la cual se evalúa a los participantes. Será fundamental introducirla en la evaluación de modelos, pero no debe de ser la única. Tanto a la hora de fijar una función de coste como a la hora de evaluar los modelos, deberíais tener en cuenta métricas de error complementarias que os ayuden a interpretar el desempeño de los modelos. Calcular el error mediano o el MAPE, cuando la métrica con la que os evaluarán será el error medio, puede ayudar tanto a conocer el comportamiento de vuestro modelo como a decantaros entre algoritmos que difieren en sólo mínimo porcentaje en la métrica principal en el conjunto de datos, pero no en otras.&lt;/p&gt;
&lt;p&gt;Casos especiales serán aquellos en los cuales nuestros datos tienen un &lt;strong&gt;fuerte componente temporal&lt;/strong&gt;, o directamente están estructurados en forma de serie temporal. Aquí en contramos discusiones específicas: variaciones de método de cross validation para evitar el &lt;em&gt;leakage&lt;/em&gt; de información entre sets, la validación walk forward o utilización de datos del futuro para entrenar, el estudio del &lt;em&gt;decay&lt;/em&gt; de la precisión, clustering de series temporales. Temas no triviales a los que dedicaremos otro post.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interpretabilidad-de-modelos.-evaluacion-de-resultados-desde-el-punto-de-vista-practico-yo-negocio.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;9. Interpretabilidad de modelos. Evaluación de resultados desde el punto de vista práctico y/o negocio.&lt;/strong&gt;&lt;/h1&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;shap_vs_gain.png&#34; alt=&#34;interpretabilidad shap xgboost&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;interpretabilidad shap xgboost&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;En el caso de que se trate de un Datathon organizado por alguna empresa de vuestra zona, seguramente los mejores proyectos serán llamados a un evento final en el que se expondrán vuestros trabajos. En otros, os pedirán una memoria presentando los resultados. Si bien es cierto, en el caso de Kaggle no suelen hacerlo.&lt;/p&gt;
&lt;p&gt;Por lo tanto, si la competición a la que te/os presentáis requiere de este tipo de resultado, será importante tenerlo presente no sólo al final, sino durante todo el proceso. Además, una vez que se ha “re-optimizado” los hiperparámetros con la última librería bayesiana y &lt;em&gt;stackeado&lt;/em&gt; nuestros mejores modelos, quizá sea hora de trabajar en la interpretabilidad de los resultados e incorporación de nuevos datos. En definitiva, conclusiones que sean valiosas a la hora de poner en marcha el modelo y que no quede en una simple estructura de pesos optimizados o de reglas.&lt;/p&gt;
&lt;p&gt;Paquetes y módulos como SHAP o LIME incorporan métodos enfocados en la interpretabilidad de cada una de las predicciones. Esto supone un paso más allá a la hora de examinar y entender nuestros modelos, ya que además de la importancia global “media” de cada variable en el modelo, obtenida en los coeficientes o por métricas como la importancia de variables que suelen traer los algoritmos de árboles y bagging/boosting, podemos obtener el peso de cada variable en una determinada observación.&lt;/p&gt;
&lt;p&gt;Por ejemplo, en nuestra última competición a la que asistimos se nos pedía esta presentación final a los tres mejores proyectos. Una vez que modelamos la información estructurada y llevamos a cabo ciertas iteraciones sobre estos datos, &lt;strong&gt;pensamos que sería más enriquecedor tanto para nosotros como para las personas que proponían el concurso, la investigación sobre la extracción de información de las imágenes&lt;/strong&gt; (información que en el caso de uso que nos ocupaba, a priori, iba a tener un impacto claro sobre la variable a predecir). Por lo tanto optamos por adentrarnos en el modelado de unas imágenes que se nos aportaban, haciendo uso del &lt;em&gt;transfer learning&lt;/em&gt;, cosa que no se nos pedía explícitamente. Llegamos a bastantes &lt;em&gt;insights&lt;/em&gt; interpretando los que las convoluciones de estos modelos preentrenados detectaban en nuestras imágenes, y lo que esmás importante, aprendimos mucho durante el proceso.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;escribir-una-memoria-con-puntos-fuertes-y-puntos-a-mejorar-detectados-que-te-sirvan-de-partida-en-el-proximo-reto.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;10. Escribir una memoria con puntos fuertes y puntos a mejorar detectados, que te sirvan de partida en el próximo reto.&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;Una vez finalizado el proyecto, un práctica que nos ha enriquecido y ha supuesto un antes y un después ha sido escribir algún tipo de memoria o documento para nosotros mismos. En él reflexionamos sobre la reciente participación. Analizamos los puntos fuertes y lo que debemos mejorar, tanto a nivel técnico como a nivel de equipo y por qué no a nivel emocional y de actitud. A ser posible nada más entregar y antes de saber el resultado. Sería genial si al tiempo de conocer el mismo se añadiera algún punto o reflexión más.&lt;/p&gt;
&lt;p&gt;Todas estas anotaciones os ayudarán, cada vez que os enfrentéis a un nuevo proyecto, a encararlo más preparados y no depender del ‘instinto’ ni de lo que la memoria selectiva os quiera recordar en momentos puntuales.&lt;/p&gt;
&lt;p&gt;Una mala predisposición personal, no investigar suficientemente y con cariño la distribución de los datos y sus valores extremos, una mala elección de equipo, seguir corriendo los modelos 30 minutos antes de que acabe el plazo de entrega, no preparar la exposición final con tiempo,… son situaciones que nos han pasado a muchos y no ocurre absolutamente nada por reflexionar sobre ello y dejarlo por escrito. Lo fundamental es, dentro de lo posible, ¡que no se repitan en la próxima competición para &lt;strong&gt;lograr conseguir aun mejores resultados! :)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pez_guitarra.gif&#34; height=&#34;100px&#34; width=&#34;200px&#34; /&gt;&lt;/p&gt;
&lt;style&gt;
p {
  word-spacing: 3px;
  text-indent: 20px;
  text-align: justify;
}
.page-subtitle {
  text-align: left  !important;
    text-indent: 0px !important;
}
.card-text {
  text-align: left  !important;
    text-indent: 0px !important;
}
&lt;/style&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Visualizador de algoritmos en R! (I) Desarrollando el mapa dinámico</title>
      <link>/es/post/visualizador-interactivo-algoritmos-busqueda-caminos-en-r-shiny/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/es/post/visualizador-interactivo-algoritmos-busqueda-caminos-en-r-shiny/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;&lt;img src=&#34;featured.png&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Aquí os mostramps el código de R. Como podeis ver, solo cargamos shiny, ggplot2 y tidyverse. Es un script en curso, ya que aun queda por desarrollar características básicas como:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;refactorizar el código ;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;visualización con GGanimate de los pasos recorridos por los algoritmos;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;y, por supuesto, implementar diferentes algoritmos &lt;em&gt;pathfinding&lt;/em&gt; y evolutivos.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;¡Todas estas nuevos desarrollos y mucho más en siguientes posts! ¡Sigue informado!&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt; (shiny)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt; (ggplot2)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt; (tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;kw&#34;&gt;source&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;helpers/ColourBorders.R&amp;quot;&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;kw&#34;&gt;source&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;helpers/PlotMapGrid.R&amp;quot;&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;ui &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;fluidPage&lt;/span&gt;(&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-9&#34; title=&#34;9&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;mainPanel&lt;/span&gt;(&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-10&#34; title=&#34;10&#34;&gt;        &lt;span class=&#34;kw&#34;&gt;column&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;offset =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-11&#34; title=&#34;11&#34;&gt;               &lt;span class=&#34;kw&#34;&gt;titlePanel&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;Pathfinding Algorithm Visualization using R!&amp;quot;&lt;/span&gt;)),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-12&#34; title=&#34;12&#34;&gt;        &lt;span class=&#34;kw&#34;&gt;HTML&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;amp;nbsp&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-13&#34; title=&#34;13&#34;&gt;        &lt;span class=&#34;kw&#34;&gt;column&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;offset =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;kw&#34;&gt;HTML&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;amp;nbsp&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-14&#34; title=&#34;14&#34;&gt;               &lt;span class=&#34;kw&#34;&gt;actionButton&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;go_search_actionButton&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Go Search!&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-15&#34; title=&#34;15&#34;&gt;               &lt;span class=&#34;kw&#34;&gt;actionButton&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;clean_all_actionButton&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Clean All&amp;quot;&lt;/span&gt;)),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-16&#34; title=&#34;16&#34;&gt;        &lt;span class=&#34;kw&#34;&gt;HTML&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;&amp;amp;nbsp&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-17&#34; title=&#34;17&#34;&gt;        &lt;span class=&#34;kw&#34;&gt;column&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;12&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;offset=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;kw&#34;&gt;plotOutput&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;map_grid_plotOutput&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-18&#34; title=&#34;18&#34;&gt;                                       &lt;span class=&#34;dt&#34;&gt;click=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;map_grid_plotOutput_click&amp;quot;&lt;/span&gt;))&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-19&#34; title=&#34;19&#34;&gt;    ))&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-20&#34; title=&#34;20&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-21&#34; title=&#34;21&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-22&#34; title=&#34;22&#34;&gt;server &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(input, output){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-23&#34; title=&#34;23&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-24&#34; title=&#34;24&#34;&gt;    &lt;span class=&#34;co&#34;&gt;## Initial params&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-25&#34; title=&#34;25&#34;&gt;    max_steps &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-26&#34; title=&#34;26&#34;&gt;    matrix_x_size &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-27&#34; title=&#34;27&#34;&gt;    matrix_y_size &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-28&#34; title=&#34;28&#34;&gt;    grid_map_reactive &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;matrix&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;ncol =&lt;/span&gt; matrix_x_size,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-29&#34; title=&#34;29&#34;&gt;                                &lt;span class=&#34;dt&#34;&gt;nrow =&lt;/span&gt; matrix_y_size,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-30&#34; title=&#34;30&#34;&gt;                                &lt;span class=&#34;dt&#34;&gt;data =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-31&#34; title=&#34;31&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-32&#34; title=&#34;32&#34;&gt;    &lt;span class=&#34;co&#34;&gt;## Colours Dict (in progress)&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-33&#34; title=&#34;33&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# 1- Wall&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-34&#34; title=&#34;34&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# 2- Init&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-35&#34; title=&#34;35&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# 3- Obj&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-36&#34; title=&#34;36&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# 4- Step done&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-37&#34; title=&#34;37&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# 5- Goal achieved&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-38&#34; title=&#34;38&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-39&#34; title=&#34;39&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Initialize objts&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-40&#34; title=&#34;40&#34;&gt;    grid_map_reactive[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;                                                           &lt;span class=&#34;co&#34;&gt;# obj&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-41&#34; title=&#34;41&#34;&gt;    grid_map_reactive[&lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;                                                           &lt;span class=&#34;co&#34;&gt;# init&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-42&#34; title=&#34;42&#34;&gt;    initial_step &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(grid_map_reactive &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-43&#34; title=&#34;43&#34;&gt;                          &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-44&#34; title=&#34;44&#34;&gt;    grid_map_reactive &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ColourBorders&lt;/span&gt;(grid_map_reactive, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)                               &lt;span class=&#34;co&#34;&gt;# rounding walls&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-45&#34; title=&#34;45&#34;&gt;    react_df &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;reactiveValues&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;df =&lt;/span&gt; grid_map_reactive,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-46&#34; title=&#34;46&#34;&gt;                               &lt;span class=&#34;dt&#34;&gt;orig =&lt;/span&gt; grid_map_reactive,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-47&#34; title=&#34;47&#34;&gt;                               &lt;span class=&#34;dt&#34;&gt;walls =&lt;/span&gt; grid_map_reactive)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-48&#34; title=&#34;48&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-49&#34; title=&#34;49&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;observe&lt;/span&gt;({&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-50&#34; title=&#34;50&#34;&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;is.null&lt;/span&gt;(input&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;map_grid_plotOutput_click)){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-51&#34; title=&#34;51&#34;&gt;            new_x_value &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;trunc&lt;/span&gt;(input&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;map_grid_plotOutput_click&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;x)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-52&#34; title=&#34;52&#34;&gt;            new_y_value &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;trunc&lt;/span&gt;(input&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;map_grid_plotOutput_click&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;y)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-53&#34; title=&#34;53&#34;&gt;            &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-54&#34; title=&#34;54&#34;&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;between&lt;/span&gt;(new_x_value,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,matrix_x_size&lt;span class=&#34;dv&#34;&gt;-1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;between&lt;/span&gt;(new_y_value,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,matrix_y_size&lt;span class=&#34;dv&#34;&gt;-1&lt;/span&gt;)){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-55&#34; title=&#34;55&#34;&gt;                &lt;span class=&#34;kw&#34;&gt;isolate&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[new_y_value,new_x_value] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;if_else&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[new_y_value,new_x_value]&lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-56&#34; title=&#34;56&#34;&gt;                                                                        &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;))&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-57&#34; title=&#34;57&#34;&gt;                &lt;span class=&#34;kw&#34;&gt;isolate&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;15&lt;/span&gt;] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-58&#34; title=&#34;58&#34;&gt;                &lt;span class=&#34;kw&#34;&gt;isolate&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[&lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-59&#34; title=&#34;59&#34;&gt;                &lt;span class=&#34;kw&#34;&gt;isolate&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[&lt;span class=&#34;dv&#34;&gt;17&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-60&#34; title=&#34;60&#34;&gt;                &lt;span class=&#34;kw&#34;&gt;isolate&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;walls &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-61&#34; title=&#34;61&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-62&#34; title=&#34;62&#34;&gt;                output&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;map_grid_plotOutput &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;renderPlot&lt;/span&gt;({&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-63&#34; title=&#34;63&#34;&gt;                    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-64&#34; title=&#34;64&#34;&gt;                    &lt;span class=&#34;kw&#34;&gt;PlotMapGrid&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-65&#34; title=&#34;65&#34;&gt;                                matrix_x_size,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-66&#34; title=&#34;66&#34;&gt;                                matrix_y_size)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-67&#34; title=&#34;67&#34;&gt;                    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-68&#34; title=&#34;68&#34;&gt;                }, &lt;span class=&#34;dt&#34;&gt;width=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;600&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;height=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;600&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;position=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;center&amp;quot;&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-69&#34; title=&#34;69&#34;&gt;            }}&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-70&#34; title=&#34;70&#34;&gt;    }) &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-71&#34; title=&#34;71&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-72&#34; title=&#34;72&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Go search! Pseudo-random pathfinding algortihm&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-73&#34; title=&#34;73&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;observeEvent&lt;/span&gt;(input&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;go_search_actionButton,{&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-74&#34; title=&#34;74&#34;&gt;        &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-75&#34; title=&#34;75&#34;&gt;        &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;nrow&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;))&lt;span class=&#34;op&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;walls   &lt;span class=&#34;co&#34;&gt;# click search without clean&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-76&#34; title=&#34;76&#34;&gt;        current_step &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;initial_step &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-77&#34; title=&#34;77&#34;&gt;        obj &amp;lt;-&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-78&#34; title=&#34;78&#34;&gt;        previous_steps_with_opt &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;current_step&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-79&#34; title=&#34;79&#34;&gt;        &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-80&#34; title=&#34;80&#34;&gt;        &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(i &lt;span class=&#34;cf&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;max_steps){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-81&#34; title=&#34;81&#34;&gt;            next_step_col &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;tribble&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;row, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;col,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-82&#34; title=&#34;82&#34;&gt;                                     current_step[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,current_step[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-83&#34; title=&#34;83&#34;&gt;                                     current_step[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,current_step[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-84&#34; title=&#34;84&#34;&gt;                                     current_step[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,current_step[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-85&#34; title=&#34;85&#34;&gt;                                     current_step[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,current_step[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-86&#34; title=&#34;86&#34;&gt;            next_values &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;NULL&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-87&#34; title=&#34;87&#34;&gt;            &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-88&#34; title=&#34;88&#34;&gt;            &lt;span class=&#34;cf&#34;&gt;for&lt;/span&gt;(r &lt;span class=&#34;cf&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;nrow&lt;/span&gt;(next_step_col)){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-89&#34; title=&#34;89&#34;&gt;                next_values &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(next_values,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-90&#34; title=&#34;90&#34;&gt;                                 react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[next_step_col[[r,&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]],&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-91&#34; title=&#34;91&#34;&gt;                                             next_step_col[[r,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]]])&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-92&#34; title=&#34;92&#34;&gt;            }&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-93&#34; title=&#34;93&#34;&gt;            &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;%in%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;next_values){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-94&#34; title=&#34;94&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-95&#34; title=&#34;95&#34;&gt;                current_step &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;next_step_col[next_values&lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,] &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-96&#34; title=&#34;96&#34;&gt;&lt;span class=&#34;st&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;as.matrix&lt;/span&gt;()&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-97&#34; title=&#34;97&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-98&#34; title=&#34;98&#34;&gt;                react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[current_step] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-99&#34; title=&#34;99&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-100&#34; title=&#34;100&#34;&gt;                &lt;span class=&#34;cf&#34;&gt;break&lt;/span&gt;()&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-101&#34; title=&#34;101&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-102&#34; title=&#34;102&#34;&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;%in%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;next_values){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-103&#34; title=&#34;103&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-104&#34; title=&#34;104&#34;&gt;                &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(next_values&lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-105&#34; title=&#34;105&#34;&gt;                    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-106&#34; title=&#34;106&#34;&gt;                    previous_steps_with_opt &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;current_step&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-107&#34; title=&#34;107&#34;&gt;                    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-108&#34; title=&#34;108&#34;&gt;                }&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-109&#34; title=&#34;109&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-110&#34; title=&#34;110&#34;&gt;                current_step &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;next_step_col[next_values&lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,] &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-111&#34; title=&#34;111&#34;&gt;&lt;span class=&#34;st&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;sample_n&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-112&#34; title=&#34;112&#34;&gt;&lt;span class=&#34;st&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;as.matrix&lt;/span&gt;()&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-113&#34; title=&#34;113&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-114&#34; title=&#34;114&#34;&gt;                react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df[current_step] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-115&#34; title=&#34;115&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-116&#34; title=&#34;116&#34;&gt;            } &lt;span class=&#34;cf&#34;&gt;else&lt;/span&gt; {&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-117&#34; title=&#34;117&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-118&#34; title=&#34;118&#34;&gt;                current_step &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;previous_steps_with_opt&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-119&#34; title=&#34;119&#34;&gt;                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-120&#34; title=&#34;120&#34;&gt;            }&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-121&#34; title=&#34;121&#34;&gt;        }&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-122&#34; title=&#34;122&#34;&gt;    })&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-123&#34; title=&#34;123&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-124&#34; title=&#34;124&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Reset all&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-125&#34; title=&#34;125&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;observeEvent&lt;/span&gt;(input&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;clean_all_actionButton,{&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-126&#34; title=&#34;126&#34;&gt;        &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-127&#34; title=&#34;127&#34;&gt;        react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;orig&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-128&#34; title=&#34;128&#34;&gt;        react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;walls &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;orig&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-129&#34; title=&#34;129&#34;&gt;        &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-130&#34; title=&#34;130&#34;&gt;    })&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-131&#34; title=&#34;131&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-132&#34; title=&#34;132&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# First panel&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-133&#34; title=&#34;133&#34;&gt;    output&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;map_grid_plotOutput &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;renderPlot&lt;/span&gt;({&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-134&#34; title=&#34;134&#34;&gt;        &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-135&#34; title=&#34;135&#34;&gt;        &lt;span class=&#34;kw&#34;&gt;PlotMapGrid&lt;/span&gt;(react_df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;df,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-136&#34; title=&#34;136&#34;&gt;                    matrix_x_size,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-137&#34; title=&#34;137&#34;&gt;                    matrix_y_size)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-138&#34; title=&#34;138&#34;&gt;        &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-139&#34; title=&#34;139&#34;&gt;    }, &lt;span class=&#34;dt&#34;&gt;width=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;550&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;height=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;600&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;position=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;center&amp;quot;&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-140&#34; title=&#34;140&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-141&#34; title=&#34;141&#34;&gt;}&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-142&#34; title=&#34;142&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-143&#34; title=&#34;143&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-144&#34; title=&#34;144&#34;&gt;&lt;span class=&#34;kw&#34;&gt;shinyApp&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;ui=&lt;/span&gt;ui, &lt;span class=&#34;dt&#34;&gt;server =&lt;/span&gt; server)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para acabar, las funciones &lt;em&gt;helpers&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;ColourBorders &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(df, col_value){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-2&#34; title=&#34;2&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-3&#34; title=&#34;3&#34;&gt;    &lt;span class=&#34;co&#34;&gt;## Rounding walls &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-4&#34; title=&#34;4&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Params: df  -  Map grid&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-5&#34; title=&#34;5&#34;&gt;    &lt;span class=&#34;co&#34;&gt;#         col_value - Colour to fill the rounding blocks&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-6&#34; title=&#34;6&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Return: df with the filled roundings&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-7&#34; title=&#34;7&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-8&#34; title=&#34;8&#34;&gt;    df[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;col_value&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-9&#34; title=&#34;9&#34;&gt;    df[,&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;col_value&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-10&#34; title=&#34;10&#34;&gt;    df[&lt;span class=&#34;kw&#34;&gt;nrow&lt;/span&gt;(df),] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;col_value&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-11&#34; title=&#34;11&#34;&gt;    df[,&lt;span class=&#34;kw&#34;&gt;ncol&lt;/span&gt;(df)] &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;col_value&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-12&#34; title=&#34;12&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-13&#34; title=&#34;13&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;return&lt;/span&gt;(df)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-14&#34; title=&#34;14&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-15&#34; title=&#34;15&#34;&gt;}&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-16&#34; title=&#34;16&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-17&#34; title=&#34;17&#34;&gt;PlotMapGrid &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(df, matrix_x_size, matrix_y_size){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-18&#34; title=&#34;18&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-19&#34; title=&#34;19&#34;&gt;    &lt;span class=&#34;co&#34;&gt;## Plot the interactive grid &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-20&#34; title=&#34;20&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Params: df  -  Map grid&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-21&#34; title=&#34;21&#34;&gt;    &lt;span class=&#34;co&#34;&gt;#         matrix_x_size - X_axis limit&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-22&#34; title=&#34;22&#34;&gt;    &lt;span class=&#34;co&#34;&gt;#         matrix_y_size - Y_axis limit&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-23&#34; title=&#34;23&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Return: plot with the pathfinding&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-24&#34; title=&#34;24&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-25&#34; title=&#34;25&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-26&#34; title=&#34;26&#34;&gt;    plot &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;rbind&lt;/span&gt;(&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-27&#34; title=&#34;27&#34;&gt;            &lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(df&lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;cbind&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;fill_col=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;#623B17&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-28&#34; title=&#34;28&#34;&gt;            &lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(df &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;cbind&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;fill_col=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;#13293D&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-29&#34; title=&#34;29&#34;&gt;            &lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(df &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;cbind&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;fill_col=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;#ffff66&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-30&#34; title=&#34;30&#34;&gt;            &lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(df &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;cbind&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;fill_col=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;#99ccff&amp;quot;&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-31&#34; title=&#34;31&#34;&gt;            &lt;span class=&#34;kw&#34;&gt;which&lt;/span&gt;(df &lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;arr.ind =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;cbind&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;fill_col=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;#1B998B&amp;quot;&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-32&#34; title=&#34;32&#34;&gt;            &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-33&#34; title=&#34;33&#34;&gt;        ) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-34&#34; title=&#34;34&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;data.frame&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;stringsAsFactors =&lt;/span&gt; F) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-35&#34; title=&#34;35&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;transmute&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;y =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as.numeric&lt;/span&gt;(row), &lt;span class=&#34;dt&#34;&gt;x =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as.numeric&lt;/span&gt;(col), &lt;span class=&#34;dt&#34;&gt;fill_col=&lt;/span&gt;fill_col) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-36&#34; title=&#34;36&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(x&lt;span class=&#34;fl&#34;&gt;+0.5&lt;/span&gt;,y&lt;span class=&#34;fl&#34;&gt;+0.5&lt;/span&gt;)) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-37&#34; title=&#34;37&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_tile&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;width =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;height =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;fill =&lt;/span&gt; df&lt;span class=&#34;op&#34;&gt;$&lt;/span&gt;fill_col, &lt;span class=&#34;dt&#34;&gt;col=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-38&#34; title=&#34;38&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;scale_y_reverse&lt;/span&gt;() &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-39&#34; title=&#34;39&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;breaks =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, matrix_x_size, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-40&#34; title=&#34;40&#34;&gt;                           &lt;span class=&#34;dt&#34;&gt;limits =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;+0.5&lt;/span&gt;, matrix_x_size&lt;span class=&#34;fl&#34;&gt;+1.5&lt;/span&gt;), &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-41&#34; title=&#34;41&#34;&gt;                           &lt;span class=&#34;dt&#34;&gt;minor_breaks =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-42&#34; title=&#34;42&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;breaks =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, matrix_y_size, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-43&#34; title=&#34;43&#34;&gt;                           &lt;span class=&#34;dt&#34;&gt;limits =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;+0.5&lt;/span&gt;, matrix_y_size&lt;span class=&#34;fl&#34;&gt;+1.5&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-44&#34; title=&#34;44&#34;&gt;                           &lt;span class=&#34;dt&#34;&gt;minor_breaks =&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-45&#34; title=&#34;45&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;theme_linedraw&lt;/span&gt;()&lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-46&#34; title=&#34;46&#34;&gt;&lt;span class=&#34;st&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;theme&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;axis.title.x=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-47&#34; title=&#34;47&#34;&gt;              &lt;span class=&#34;dt&#34;&gt;axis.title.y=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-48&#34; title=&#34;48&#34;&gt;              &lt;span class=&#34;dt&#34;&gt;axis.text.x=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-49&#34; title=&#34;49&#34;&gt;              &lt;span class=&#34;dt&#34;&gt;axis.text.y=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-50&#34; title=&#34;50&#34;&gt;              &lt;span class=&#34;dt&#34;&gt;axis.ticks.x=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-51&#34; title=&#34;51&#34;&gt;              &lt;span class=&#34;dt&#34;&gt;axis.ticks.y=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;())&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-52&#34; title=&#34;52&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-53&#34; title=&#34;53&#34;&gt;        &lt;span class=&#34;kw&#34;&gt;return&lt;/span&gt;(plot)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-54&#34; title=&#34;54&#34;&gt;    &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-55&#34; title=&#34;55&#34;&gt;}&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;style&gt;
body {
text-align: justify}
p {
  word-spacing: 3px;
}
&lt;/style&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Dominando la función summarise_at(). Media ponderada con R en el ecosistema Tidyverse. </title>
      <link>/es/vizs-and-tips/summarise_at-media-ponderada-tidyverse-r/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/summarise_at-media-ponderada-tidyverse-r/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;Imagina que estas analizando datos obtenidos en encuestas. Quizá no hace falta que imagines y es realmente tu caso. Cuando tratamos de sacar estadísiticos de la distribución que siguen las respuestas, como la media, solemos hacerlo de una manera representativa, es decir, ponderando las respuestas dependiendo del número de individuos pertenecientes a un segmento.&lt;/p&gt;
&lt;p&gt;Es cierto que en R se encuentra la función &lt;em&gt;weigthed.mean()&lt;/em&gt; y puede ser util en determinados casos. Pero, ¿y qué pasa si aun no tienes calculados los pesos y almacenados como vector o columna? Incluso más importante, ¿qué pasa si quieres utilizar otra función de agregación que no sea la media?&lt;/p&gt;
&lt;p&gt;Aquí ofrecemos nuestra versión donde conseguimos obtener tanto los pesos como la agregación(de manera flexible, media u otra función) de manera ponderada:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;survey_data &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;tribble&lt;/span&gt;(                           &lt;span class=&#34;co&#34;&gt;# Creamos el dataset&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;  &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;id, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;region1, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;region2, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;gender, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;q1, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;q2,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;  &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;sp&amp;quot;&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;mad&amp;quot;&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;m&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;  &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;it&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;bol&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;m&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;  &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;sp&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;  &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;sp&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-9&#34; title=&#34;9&#34;&gt;  &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;it&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;bol&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;m&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;7&lt;/span&gt;)  &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;survey_data &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                           &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;group_by&lt;/span&gt;(region1, region2, gender) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Elegimos nuestros segmentos&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;mutate&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;weight =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;n&lt;/span&gt;()) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                      &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Calculamos los pesos&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ungroup&lt;/span&gt;() &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                                   &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Una vez calculados desagrupamos&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;summarise_at&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;vars&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;contains&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;q&amp;quot;&lt;/span&gt;)),               &lt;span class=&#34;co&#34;&gt;# Son preguntas columnas que empiezan por q&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-6&#34; title=&#34;6&#34;&gt;               &lt;span class=&#34;kw&#34;&gt;funs&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;weighted_mean =&lt;/span&gt;               &lt;span class=&#34;co&#34;&gt;# Elegimos como funcion de agregación la media&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-7&#34; title=&#34;7&#34;&gt;                      &lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(. &lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;weight)&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(weight)))  &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
q1_weighted_mean
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
q2_weighted_mean
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.333333
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Lista todas las variables definidas en Jupyter Notebooks</title>
      <link>/es/vizs-and-tips/magic-whos-metodo-jupyter-notebook/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/magic-whos-metodo-jupyter-notebook/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;featured.png&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Una queja o comentario recurrente entre los usuarios que empiezan a usar los Jupyter Notebooks es la falta de informacion sobre las variables y funciones definidas en el entorno. Si te realizas esta pregunta, seguramente necesites informacion sobre el uso y el principal objetivo de estos &lt;em&gt;notebooks&lt;/em&gt;, el cual es muy diferente al de IDEs como Spyder, Pycharm o RStudio.&lt;/p&gt;
&lt;p&gt;Una vez que confirmamos que este tipo de &lt;em&gt;notebooks&lt;/em&gt; son lo que necesitamos, existen diferentes maneras de mostrar esta información. La primera y más facil de ellas es mediante el método mágico &lt;strong&gt;%whos&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/vizs-and-tips/magic-whos-metodo-jupyter-notebook/jupyter_magic_who.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Otras alternativas son, por un lado la extensión &lt;em&gt;nbextension&lt;/em&gt; y dentro de Jupyter Lab el inspector de variables. Puedes encontrar más información &lt;a href=&#34;https://stackoverflow.com/questions/37718907/variable-explorer-in-jupyter-notebook&#34;&gt;aquí&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Muestra tus habilidades o skills mediante un gráfico en R y su paquete ggplot</title>
      <link>/es/vizs-and-tips/skills-chart-curriculum-r-ggplot/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/skills-chart-curriculum-r-ggplot/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;&lt;img src=&#34;featured.png&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A la hora de presentar tus habilidades ya sea en una página web o en tu CV, una buena idea sueles ser sintetizarlas mediante una gráfica. Muchas plantillas de CVs incluyen una gráfica por defecto.&lt;/p&gt;
&lt;p&gt;En este post queremos dar un &lt;em&gt;template&lt;/em&gt; el cual poder personalizar con vuestras habilidades y evolucionar incorporando mejoras estéticas. ¡Estaremos encantados de ver tu versión!&lt;/p&gt;
&lt;p&gt;Os dejamos el código comentado en el siguiente &lt;em&gt;chunk&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(ggplot2)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;co&#34;&gt;# library(plotly)                      Es simple transformarlo a plotly&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tibble)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(dplyr)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;skills &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;tribble&lt;/span&gt;(                    &lt;span class=&#34;co&#34;&gt;# Creamos el dataset con las habilidades&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;    &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;Skill, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;Hours, &lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;Class,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;AWS&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;500&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;BigData&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-9&#34; title=&#34;9&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Python&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;8000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Language&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-10&#34; title=&#34;10&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Spark&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;BigData&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-11&#34; title=&#34;11&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;9000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Language&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-12&#34; title=&#34;12&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Git&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Tools&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-13&#34; title=&#34;13&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Jira&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Tools&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-14&#34; title=&#34;14&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Forecasting&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Objetive&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-15&#34; title=&#34;15&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Segmentation&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Objetive&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-16&#34; title=&#34;16&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Computer Vision&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;600&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Objetive&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-17&#34; title=&#34;17&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;SQL&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;4500&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Language&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-18&#34; title=&#34;18&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;IBM Data Stage &amp;amp; SPSS&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1200&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Tools&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-19&#34; title=&#34;19&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Shiny R&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1500&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Visualization&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-20&#34; title=&#34;20&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Tableau&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1000&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Visualization&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-21&#34; title=&#34;21&#34;&gt;    &lt;span class=&#34;st&#34;&gt;&amp;quot;Spotfire&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;500&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Visualization&amp;quot;&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-22&#34; title=&#34;22&#34;&gt;) &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;co&#34;&gt;# plotly(                              &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;data=&lt;/span&gt;skills,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-3&#34; title=&#34;3&#34;&gt;       &lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;x=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;reorder&lt;/span&gt;(Skill,&lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;desc&lt;/span&gt;(Hours)),           &lt;span class=&#34;co&#34;&gt;# Ordenamos las habilidades según las horas dedicadas&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-4&#34; title=&#34;4&#34;&gt;           &lt;span class=&#34;dt&#34;&gt;y=&lt;/span&gt; Hours,                                &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-5&#34; title=&#34;5&#34;&gt;           &lt;span class=&#34;dt&#34;&gt;fill=&lt;/span&gt;Class,                              &lt;span class=&#34;co&#34;&gt;# Coloreamos según ek tipo de habilidad&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-6&#34; title=&#34;6&#34;&gt;           &lt;span class=&#34;dt&#34;&gt;label=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;paste0&lt;/span&gt;(Hours,&lt;span class=&#34;st&#34;&gt;&amp;quot; h&amp;quot;&lt;/span&gt;))) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Añadimos un label con las horas&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_bar&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;stat =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;identity&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;colour=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Stat identity para que pueda tener eje Y&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;coord_flip&lt;/span&gt;() &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                                  &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Hacemos las barras horizontales&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;x=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;y=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;Hours&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;fill=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)  &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Definimos el nombre de los ejes&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-10&#34; title=&#34;10&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                               &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Theme sin background&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-11&#34; title=&#34;11&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;scale_fill_brewer&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;palette =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;YlOrBr&amp;quot;&lt;/span&gt;,           &lt;span class=&#34;co&#34;&gt;# Paleta deseado&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-12&#34; title=&#34;12&#34;&gt;                      &lt;span class=&#34;dt&#34;&gt;direction =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;-1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-13&#34; title=&#34;13&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_label&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;show_guide  =&lt;/span&gt; F, &lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;y=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;400&lt;/span&gt;))         &lt;span class=&#34;co&#34;&gt;# Usar show_guide a pesar del warning&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Reordenando gráficos de barras en R con GGanimate</title>
      <link>/es/vizs-and-tips/reordenar-grafico-barras-r-ggplot-gganimate/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/reordenar-grafico-barras-r-ggplot-gganimate/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;&lt;img src=&#34;featured.gif&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;GGanimate es una libraría de R que está generando bastantes casos de uso, comentarios y posts debido al potencial que introduce en el aspecto de visualizaciones en el ecosistema R.&lt;/p&gt;
&lt;p&gt;Nos encontramos usuarios preguntando la posibilidad de que las barras no solo aumenten y disminuyan a lo largo del tiempo(de la animación) sino que también el orden de las mismas se modificara en función de si eran mayores o menores y no permaneciesen en el orden del primer &lt;em&gt;timestamp&lt;/em&gt;, en definitiva que se reordenaran.&lt;/p&gt;
&lt;p&gt;Por tanto, compartimos el siguiente código en el cual se consigue que las barras se reordenan a lo largo del tiempo. Es más, en este ejemplo, tenemos 5 ciudades que entran y salen del gráfico en función de su valor durante el tiempo y visualizando el top 4.&lt;/p&gt;
&lt;p&gt;Os dejamos el código para realizar la animación del gráfico de barras:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(ggplot2)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(gganimate)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;df_evolution_data &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;data.frame&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;Name=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;rep&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;Madrid&amp;quot;&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;Barcelona&amp;quot;&lt;/span&gt;,   &lt;span class=&#34;co&#34;&gt;# Creamos el dataset&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;                              &lt;span class=&#34;st&#34;&gt;&amp;quot;Valencia&amp;quot;&lt;/span&gt;,&lt;span class=&#34;st&#34;&gt;&amp;quot;Alicante&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;                              &lt;span class=&#34;st&#34;&gt;&amp;quot;Sevilla&amp;quot;&lt;/span&gt;),&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;                   &lt;span class=&#34;dt&#34;&gt;Year =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;factor&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sort&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;rep&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;2001&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2005&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;))),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;                   &lt;span class=&#34;dt&#34;&gt;Value =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;runif&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;25&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;1000&lt;/span&gt;))&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-9&#34; title=&#34;9&#34;&gt;df_evolution_data_filtered &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;df_evolution_data &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-10&#34; title=&#34;10&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;group_by&lt;/span&gt;(Year) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                                               &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-11&#34; title=&#34;11&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;mutate&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;Rank =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;rank&lt;/span&gt;(Value)) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                                   &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Añadimos la columna rank y&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-12&#34; title=&#34;12&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;filter&lt;/span&gt;(Rank &lt;span class=&#34;op&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)                                                &lt;span class=&#34;co&#34;&gt;# descartamos el de menor valor&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;ggplot&lt;/span&gt;(df_evolution_data_filtered) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_col&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;x=&lt;/span&gt;Rank,                          &lt;span class=&#34;co&#34;&gt;# Creamos el gráfico de barras&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-3&#34; title=&#34;3&#34;&gt;               &lt;span class=&#34;dt&#34;&gt;y=&lt;/span&gt;Value,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-4&#34; title=&#34;4&#34;&gt;               &lt;span class=&#34;dt&#34;&gt;group=&lt;/span&gt;Name,                      &lt;span class=&#34;co&#34;&gt;# Afrumando y filleando por ciudad&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-5&#34; title=&#34;5&#34;&gt;               &lt;span class=&#34;dt&#34;&gt;fill=&lt;/span&gt;Name),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-6&#34; title=&#34;6&#34;&gt;           &lt;span class=&#34;dt&#34;&gt;width=&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;0.4&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_text&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;x=&lt;/span&gt;Rank,                         &lt;span class=&#34;co&#34;&gt;# Etiquetamos las barras con los nombres&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-8&#34; title=&#34;8&#34;&gt;                &lt;span class=&#34;dt&#34;&gt;y=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-9&#34; title=&#34;9&#34;&gt;                &lt;span class=&#34;dt&#34;&gt;label=&lt;/span&gt;Name,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-10&#34; title=&#34;10&#34;&gt;                &lt;span class=&#34;dt&#34;&gt;group=&lt;/span&gt;Name),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-11&#34; title=&#34;11&#34;&gt;            &lt;span class=&#34;dt&#34;&gt;hjust=&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;1.25&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-12&#34; title=&#34;12&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                             &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Elegimos un theme que no sea gris&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-13&#34; title=&#34;13&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ylab&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;#39;Value&amp;#39;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-14&#34; title=&#34;14&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;theme&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;axis.title.y =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),         &lt;span class=&#34;co&#34;&gt;# Eliminamos los labels y titles &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-15&#34; title=&#34;15&#34;&gt;        &lt;span class=&#34;dt&#34;&gt;axis.text.y =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-16&#34; title=&#34;16&#34;&gt;        &lt;span class=&#34;dt&#34;&gt;axis.ticks.y =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;element_blank&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-17&#34; title=&#34;17&#34;&gt;        &lt;span class=&#34;dt&#34;&gt;plot.margin =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;unit&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;), &lt;span class=&#34;st&#34;&gt;&amp;#39;lines&amp;#39;&lt;/span&gt;)) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Escogemos el zoom&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-18&#34; title=&#34;18&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;scale_fill_brewer&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;palette=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;Dark2&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Paleta de colores de las barras&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-19&#34; title=&#34;19&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;coord_flip&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;clip=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;#39;off&amp;#39;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                      &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Hacemos las barras horizontales&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-20&#34; title=&#34;20&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ggtitle&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;#39;{closest_state}&amp;#39;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Tilulo == al valor de la columna que&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-21&#34; title=&#34;21&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;transition_states&lt;/span&gt;(Year,                       &lt;span class=&#34;co&#34;&gt;# Animamos la columna Year&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-22&#34; title=&#34;22&#34;&gt;                    &lt;span class=&#34;dt&#34;&gt;transition_length =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,      &lt;span class=&#34;co&#34;&gt;# Duración de la animación de transición&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-23&#34; title=&#34;23&#34;&gt;                    &lt;span class=&#34;dt&#34;&gt;state_length =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Duración de cada Year&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-24&#34; title=&#34;24&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;exit_fly&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;x_loc =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;y_loc =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Salida de la ciudad no top4&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-25&#34; title=&#34;25&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;enter_fly&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;x_loc =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;y_loc =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)               &lt;span class=&#34;co&#34;&gt;# Entrada de la ciudad al top4&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Muestra los intervalos de confianza de tus predicciones mediante geom_ribbon() con R Ggplot</title>
      <link>/es/vizs-and-tips/ggplot_geom_ribbon_shadow/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/ggplot_geom_ribbon_shadow/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;&lt;img src=&#34;featured.png&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;A continuación te mostramos el código:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;huron &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;data.frame&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;year =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1875&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1972&lt;/span&gt;,                        &lt;span class=&#34;co&#34;&gt;# Creamos el conjunto de datos&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;                    &lt;span class=&#34;dt&#34;&gt;value =&lt;/span&gt; LakeHuron,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;                    &lt;span class=&#34;dt&#34;&gt;std =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;runif&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;length&lt;/span&gt;(LakeHuron),&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))      &lt;span class=&#34;co&#34;&gt;# Valores random para representar la desviación   &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;huron &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                                                    &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Fijamos los ejes X e Y&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(year, value)) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;          &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;color =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;firebrick&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;size =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                 &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Creamos la gráfica de linea &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_ribbon&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;ymin =&lt;/span&gt; value &lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;std,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-10&#34; title=&#34;10&#34;&gt;                  &lt;span class=&#34;dt&#34;&gt;ymax =&lt;/span&gt; value &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;std),                       &lt;span class=&#34;co&#34;&gt;# Creamos los intervalos con valor +- std&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-11&#34; title=&#34;11&#34;&gt;              &lt;span class=&#34;dt&#34;&gt;fill =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;steelblue2&amp;quot;&lt;/span&gt;) &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para un grafico con varias lineas, debemos incorporar el &lt;em&gt;aesthetic&lt;/em&gt; de &lt;em&gt;group&lt;/em&gt; de la siguiente manera:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-2&#34; title=&#34;2&#34;&gt;huron &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;data.frame&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;year =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;rep&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1875&lt;/span&gt;&lt;span class=&#34;op&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;1972&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;), &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-3&#34; title=&#34;3&#34;&gt;                    &lt;span class=&#34;dt&#34;&gt;group =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;rep&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;98&lt;/span&gt;),&lt;span class=&#34;kw&#34;&gt;rep&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;98&lt;/span&gt;)),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-4&#34; title=&#34;4&#34;&gt;                    &lt;span class=&#34;dt&#34;&gt;value =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(LakeHuron, LakeHuron &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-5&#34; title=&#34;5&#34;&gt;                    &lt;span class=&#34;dt&#34;&gt;std =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;runif&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;length&lt;/span&gt;(LakeHuron)&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))     &lt;span class=&#34;co&#34;&gt;# Creamos el conjunto de datos con dos series&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-6&#34; title=&#34;6&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;co&#34;&gt;# Seguimos la misma estructura para crear el plot, pero añadiendo fill=group y group=group para indicar que&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;co&#34;&gt;# coloree y trate las dos series de manera diferenciada.&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-9&#34; title=&#34;9&#34;&gt;huron &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-10&#34; title=&#34;10&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(year, value, &lt;span class=&#34;dt&#34;&gt;fill =&lt;/span&gt; group)) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                    &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-11&#34; title=&#34;11&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;color =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;firebrick&amp;quot;&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;size =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-12&#34; title=&#34;12&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_ribbon&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;ymin =&lt;/span&gt; value &lt;span class=&#34;op&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;std,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-13&#34; title=&#34;13&#34;&gt;                  &lt;span class=&#34;dt&#34;&gt;ymax =&lt;/span&gt; value &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;std,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-14&#34; title=&#34;14&#34;&gt;                  &lt;span class=&#34;dt&#34;&gt;group=&lt;/span&gt;group),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-15&#34; title=&#34;15&#34;&gt;              &lt;span class=&#34;dt&#34;&gt;fill =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;steelblue2&amp;quot;&lt;/span&gt;) &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/es/vizs-and-tips/grafica-intervalos-confianza-ggplot-geom_ribbon-plot-R/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plataformas donde puedes participar en competiciones de datos</title>
      <link>/es/vizs-and-tips/plataformas-competiciones-de-datos-kaggle-datathon/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/plataformas-competiciones-de-datos-kaggle-datathon/</guid>
      <description>


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Kaggle - &lt;a href=&#34;https://www.kaggle.com&#34; class=&#34;uri&#34;&gt;https://www.kaggle.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Driven Data - &lt;a href=&#34;https://www.drivendata.org/competitions/&#34; class=&#34;uri&#34;&gt;https://www.drivendata.org/competitions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CodaLab - &lt;a href=&#34;https://competitions.codalab.org/&#34; class=&#34;uri&#34;&gt;https://competitions.codalab.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alibaba Tianchi - &lt;a href=&#34;https://tianchi.aliyun.com/competition/gameList/activeList&#34; class=&#34;uri&#34;&gt;https://tianchi.aliyun.com/competition/gameList/activeList&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Analyticsvidhya - &lt;a href=&#34;https://datahack.analyticsvidhya.com/contest/all&#34; class=&#34;uri&#34;&gt;https://datahack.analyticsvidhya.com/contest/all&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;hackerearth - &lt;a href=&#34;https://www.hackerearth.com/challenges/competitive/&#34; class=&#34;uri&#34;&gt;https://www.hackerearth.com/challenges/competitive/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Agorize - &lt;a href=&#34;https://www.agorize.com/en/challenges&#34; class=&#34;uri&#34;&gt;https://www.agorize.com/en/challenges&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;También existen eventos concretos, que se celebran anualmente.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;IDA (international Data Analysis Olympiad) (Registro en Enero) - &lt;a href=&#34;https://idao.world/&#34; class=&#34;uri&#34;&gt;https://idao.world/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IronViz - &lt;a href=&#34;https://www.tableau.com/iron-viz&#34; class=&#34;uri&#34;&gt;https://www.tableau.com/iron-viz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;TopCoder - &lt;a href=&#34;https://tco19.topcoder.com/competition-overview/algorithm&#34; class=&#34;uri&#34;&gt;https://tco19.topcoder.com/competition-overview/algorithm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Data Mining Cup - &lt;a href=&#34;https://www.data-mining-cup.com/&#34; class=&#34;uri&#34;&gt;https://www.data-mining-cup.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;A nivel nacional y local están comenzando a organizarse todo tipos de eventos relativos al #opendata. Te invitamos a que investigues sobre ellos y te animes a colaborar en mejorar tu entorno a través de la explotación de los datos.&lt;/p&gt;
&lt;p&gt;Por ejemplo, en España a fecha de este artículo, los más importantes son:&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;CajaMar - &lt;a href=&#34;https://www.cajamardatalab.com/&#34; class=&#34;uri&#34;&gt;https://www.cajamardatalab.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gobierno - &lt;a href=&#34;https://datos.gob.es/es/event-tags/concurso&#34; class=&#34;uri&#34;&gt;https://datos.gob.es/es/event-tags/concurso&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Junta Castilla y Leon - &lt;a href=&#34;https://datosabiertos.jcyl.es/web/es/datos-abiertos-castilla-leon.html&#34; class=&#34;uri&#34;&gt;https://datosabiertos.jcyl.es/web/es/datos-abiertos-castilla-leon.html&lt;/a&gt;&lt;/p&gt;
&lt;/style&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>La mejor manera de hacer recuento de NAs por columna</title>
      <link>/es/vizs-and-tips/recuento-nas-por-columna-en-r-comparativa/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/es/vizs-and-tips/recuento-nas-por-columna-en-r-comparativa/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;¿Estás comenzando tu etapa de exploración de datos? Una de las primeras cosas que solemos hacer es calcular el porcentaje de NAs por variable. Existen muchas maneras de llegar a este resultado, partiendo de R base con summary (obtenemos más estadísticos y con muchas variables puede no interesar todo de golpe)&lt;/p&gt;
&lt;p&gt;Vamos a comprobar el &lt;em&gt;performance&lt;/em&gt; de las funciones que más usamos para este conteo/porcentaje. Destacamos que el output de ellas no es exactamente igual, así que además de los tiempos, dependerá de la estructura de nuestro programa elegir una u otra.&lt;/p&gt;
&lt;p&gt;Comenzamos definiendo la función de comparación para probar con datasets cos más filas y más columnas para ver como escalan:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(microbenchmark)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;benchmark_count_na_by_column &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(dataset){&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;  &lt;span class=&#34;kw&#34;&gt;microbenchmark&lt;/span&gt;(&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Summary table output&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;    dataset &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;summary&lt;/span&gt;(),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Numeric output&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-9&#34; title=&#34;9&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;colSums&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(dataset)),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-10&#34; title=&#34;10&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;sapply&lt;/span&gt;(dataset, &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(x) &lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(x))),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-11&#34; title=&#34;11&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# List output&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-12&#34; title=&#34;12&#34;&gt;    dataset &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(.))),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-13&#34; title=&#34;13&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;lapply&lt;/span&gt;( dataset, &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(x) &lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(x))),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-14&#34; title=&#34;14&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Df output&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-15&#34; title=&#34;15&#34;&gt;    dataset &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-16&#34; title=&#34;16&#34;&gt;&lt;span class=&#34;st&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;select&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;everything&lt;/span&gt;()) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-17&#34; title=&#34;17&#34;&gt;&lt;span class=&#34;st&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;summarise_all&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;funs&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(.)))),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-18&#34; title=&#34;18&#34;&gt;    dataset &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-19&#34; title=&#34;19&#34;&gt;&lt;span class=&#34;st&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;summarise_each&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;funs&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(.)))),&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-20&#34; title=&#34;20&#34;&gt;    &lt;span class=&#34;co&#34;&gt;# Tibble output&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-21&#34; title=&#34;21&#34;&gt;    dataset &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;map_df&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(.)))&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-22&#34; title=&#34;22&#34;&gt;  )&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-23&#34; title=&#34;23&#34;&gt;}&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Veamos el rendimiento entre datasets:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;print&lt;/span&gt;(airquality &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;nrow&lt;/span&gt;()) &lt;span class=&#34;co&#34;&gt;# 153 rows&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;benchmark_count_na_by_column&lt;/span&gt;(airquality)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;co&#34;&gt;## Unit: microseconds&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;co&#34;&gt;##funct             min       lq     mean     median      uq    max     neval  class&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;co&#34;&gt;##summary()         1480.5   1582.60 1979.676 1897.30  2100.45 6403.2   100    table&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;co&#34;&gt;##colSums()         24.4     38.45   47.854   44.70   53.90    152.4    100    integer&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;co&#34;&gt;##sapply()          23.2     35.05   67.891   39.65   50.30    2494.8   100    integer&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-6&#34; title=&#34;6&#34;&gt;&lt;span class=&#34;co&#34;&gt;##map()             140.2    182.60  214.092  200.75  238.50   549.6    100    list&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;co&#34;&gt;##lapply()          11.2     15.65   27.093   18.85   22.45    750.1    100    list&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;co&#34;&gt;##summarise_all()   1996.9   2147.80 2650.223 2382.90 2798.55  8133.7   100    data.frame&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;co&#34;&gt;##summarise_each()  2277.9   2497.05 2951.477 2898.40 3080.65  7977.2   100    data.frame&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-10&#34; title=&#34;10&#34;&gt;&lt;span class=&#34;co&#34;&gt;##map_df()          190.0    249.00  331.368  275.40  326.05   383      100    tbl_df&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y para acaba, veamos como escala cada una de estas funciones a un dataset de 100000 filas:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-1&#34; title=&#34;1&#34;&gt;big_dataset &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;nrow&lt;/span&gt;() &lt;span class=&#34;co&#34;&gt;# 100 000 rows&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb6-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;benchmark_count_na_by_column&lt;/span&gt;(big_dataset)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;co&#34;&gt;## Unit: milliseconds&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;co&#34;&gt;##funct             min        lq       mean      median        uq    max    neval class&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;co&#34;&gt;##summary()         113.7535 129.35070 138.716624 133.14050 143.45920 252.0149 100   table&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;co&#34;&gt;##colSums()         4.4280   5.31080  12.502741   5.65005  18.77570 124.8206   100   integer&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;co&#34;&gt;##sapply()          2.2452   3.03095   6.788395   3.15310  15.04010  18.6061   100   integer&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-6&#34; title=&#34;6&#34;&gt;&lt;span class=&#34;co&#34;&gt;##map()             2.5950   3.28390   5.760602   3.38020   3.69445  19.4527   100   list&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;co&#34;&gt;##lapply()          2.2018   2.95700   6.219106   3.03605   3.62860  19.5514   100   list&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;co&#34;&gt;##summarise_all()   5.0982   5.85135  10.093431   6.05940   6.87070 127.5107   100   data.frame&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;co&#34;&gt;##summarise_each()  5.7251   6.16980  10.191426   6.33065   6.72210 125.2943   100   data.frame&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-10&#34; title=&#34;10&#34;&gt;&lt;span class=&#34;co&#34;&gt;##map_df()          2.6913   3.42045   7.694863   3.56720   3.89715 122.2030   100   tbl_df&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Convierte tu GGplot en una animación 3D con R y Rayshader</title>
      <link>/es/post/de-ggplot-a-3d-en-r-con-rayshader/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/es/post/de-ggplot-a-3d-en-r-con-rayshader/</guid>
      <description>
&lt;style type=&#34;text/css&#34;&gt;
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  { background-color: #f8f8f8; }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ef2929; } /* Alert */
code span.an { color: #8f5902; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #c4a000; } /* Attribute */
code span.bn { color: #0000cf; } /* BaseN */
code span.cf { color: #204a87; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4e9a06; } /* Char */
code span.cn { color: #000000; } /* Constant */
code span.co { color: #8f5902; font-style: italic; } /* Comment */
code span.cv { color: #8f5902; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #8f5902; font-weight: bold; font-style: italic; } /* Documentation */
code span.dt { color: #204a87; } /* DataType */
code span.dv { color: #0000cf; } /* DecVal */
code span.er { color: #a40000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #0000cf; } /* Float */
code span.fu { color: #000000; } /* Function */
code span.im { } /* Import */
code span.in { color: #8f5902; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #204a87; font-weight: bold; } /* Keyword */
code span.op { color: #ce5c00; font-weight: bold; } /* Operator */
code span.ot { color: #8f5902; } /* Other */
code span.pp { color: #8f5902; font-style: italic; } /* Preprocessor */
code span.sc { color: #000000; } /* SpecialChar */
code span.ss { color: #4e9a06; } /* SpecialString */
code span.st { color: #4e9a06; } /* String */
code span.va { color: #000000; } /* Variable */
code span.vs { color: #4e9a06; } /* VerbatimString */
code span.wa { color: #8f5902; font-weight: bold; font-style: italic; } /* Warning */
&lt;/style&gt;


&lt;p&gt;&lt;img src=&#34;featured.gif&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;En 7 minutos, seremos capaces de convertir nuestras gráficas generadas con ggplot en espectaculares plots en 3D, ¡y ademas interactivos!&lt;/em&gt;
&lt;em&gt;Podrás embebernos en HTML/Rmarkdown, o incluso mejor, podras exportarlo como mp4 en una animacion rotatoria para sacarle todo el jugo a tus datos!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Como caso de uso, vamos a visualizar la edad media de los municipios españoles cruzando datos del padrón con los datos GIS, para posteriormente visualizarlos en 3 dimensiones.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/de-ggplot-a-3d-en-r-con-rayshader/rayshader_header.png&#34; height=&#34;350px&#34; width=&#34;500px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;introduccion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;1. Introducción&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;En las últimas semanas, un ‘nuevo’ paquete de R ha centrado el interés de cierta parte de la comunidad. Decimos ‘nuevo’ porque se ha incorporado recientemente al CRAN, aunque realmente el primer commit realizado por su autor su repo de Github data de hace más de un año. Su nombre es &lt;strong&gt;rayshader&lt;/strong&gt; y en palabras de su propio creador:&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“rayshader uses elevation data in a base R matrix and a combination of raytracing, spherical texture mapping, overlays, and ambient occlusion to generate beautiful topographic 2D and 3D maps”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Bajo mi punto de vista, Tyler Morgan-Wall (el autor del paquete) dio con la tecla cuando incorporó al paquete dos nuevas funciones, plot_gg() y render_movie(). La primera de ellas nos permite convertir con 2 líneas de código nuestra visualización en ggplot a una figura 3D de una manera realmente facil y eficiente. La segunda de ellas renderiza esta figura y la anima, poniendo al alcance del usuario diversos parámetros para controlar el zoom, los fps, ángulo, inclinación…&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/de-ggplot-a-3d-en-r-con-rayshader/rayshader_repositorio_github.png&#34; height=&#34;770px&#34; width=&#34;770px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;las-nuevas-funcionalidades-y-planteamiento-del-experimento&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;&lt;strong&gt;Las nuevas funcionalidades y planteamiento del experimento&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;La única condicion que debe cunplir tu gg-visualización es tener como &lt;em&gt;aesthetic&lt;/em&gt; color o &lt;em&gt;fill&lt;/em&gt;, y en algunos casos también puedes jugar con el &lt;em&gt;size&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;En demasiadas ocasiones, la visualización de datos en 3D no es la mejor opción a elegir, tal y como hablaremos un un futuro post. Por este motivo, he intentado traer un ejemplo donde el uso de la tercera dimensión aporte valor al análisis.&lt;/p&gt;
&lt;p&gt;Este ejemplo práctico consistirá, como ya hemos avanzado, en la visualización en el mapa de España la edad media en cada municipio. ¿Chulo? Para ello necesitaremos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Los datos del censo sobre las estadísticas de la población (en este caso la edad media) por cada municipio. Estos datos los obtenemos de la web del INE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Los datos GIS con las coordenadas de cada uno de los municipios que componen España.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una vez que tengamos estas dos fuentes de datos combinados, los visualizaremos y posteriormente exploraremos su renderización en un clip 3D con la figura rotando tal y como se ve en la imagen que encabeza este post.&lt;/p&gt;
&lt;p&gt;¡Vayamos paso por paso!&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;cdu-visualizando-la-edad-media-de-cada-municipio-en-espana&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;2. CdU: Visualizando la edad media de cada municipio en España&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Una vez hemos establecido el objetivo principal y las diferentes fuentes de los datos, podemos proceder a la descarga y tratamiento de los mismos.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;descargando-los-datos-del-censo&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.1- Descargando los datos del censo&lt;/h3&gt;
&lt;p&gt;Como digimos, para llevar a cabo nuestro propósito, necesitamos acceder a dos fuentes diferentes de datos. Usaremos el portal de datos abiertos del INE para descargar la edad media en cada municipio español. Después de una búsqueda bastante ardua por su web, encontramos la información que buscábamos. Os dejo este link donde teneis acceso a lo que ellos llaman como estadísticas contínuas&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ine.es/dyngs/INEbase/es/operacion.htm?c=Estadistica_C&amp;amp;cid=1254736177012&amp;amp;menu=resultados&amp;amp;secc=1254736195461&amp;amp;idp=1254734710990&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Con el objetivo de no irnos por las ramas, descargaremos directamente el fichero del 2018. Sin embargo, sí que es interesante citar la iniciativa &lt;a href=&#34;https://github.com/oddworldng/INEbaseR/&#34;&gt;&lt;em&gt;INEbase&lt;/em&gt;&lt;/a&gt; de facilitar el acceso y la navegación en esta fuente de datos de INE.&lt;/p&gt;
&lt;p&gt;Comenzamos cargando (o descargando) los paquetes necesarios para nuestro análisis. En un futuro post o tip compartiremos una función nuestra para la carga (o descarga en caso necesario) múltiple de paquetes en una sola linea.&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(pxR)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(RColorBrewer)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(rgeos)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;co&#34;&gt;#install.packages(&amp;quot;rgdal&amp;quot;, repos = &amp;quot;http://cran.us.r-project.org&amp;quot;) reinstall cause gpclib dependencie https://stackoverflow.com/questions/30790036/error-istruegpclibpermitstatus-is-not-true&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(rgdal)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-6&#34; title=&#34;6&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(rayshader)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(knitr)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(magrittr)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;kw&#34;&gt;library&lt;/span&gt;(tidyverse)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-10&#34; title=&#34;10&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-11&#34; title=&#34;11&#34;&gt;as.numeric.factor &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(x) {    &lt;span class=&#34;co&#34;&gt;# Custom function to convert fctr to num factor value&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-12&#34; title=&#34;12&#34;&gt;    &lt;span class=&#34;kw&#34;&gt;return&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;suppressWarnings&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;as.numeric&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;levels&lt;/span&gt;(x))[x]))&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-13&#34; title=&#34;13&#34;&gt;}&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-14&#34; title=&#34;14&#34;&gt; &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb1-15&#34; title=&#34;15&#34;&gt;&lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;op&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;dir.exists&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;)) &lt;span class=&#34;kw&#34;&gt;dir.create&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;)  &lt;span class=&#34;co&#34;&gt;# Create the download directory&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Descargando el fichero del INE 2018:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-1&#34; title=&#34;1&#34;&gt;utils&lt;span class=&#34;op&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;download.file&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;url =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;http://www.ine.es/pcaxisdl/t20/e245/p05/a2018/l0/00000006.px&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb2-2&#34; title=&#34;2&#34;&gt;                     &lt;span class=&#34;dt&#34;&gt;destfile =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;data/census_2018.px&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-1&#34; title=&#34;1&#34;&gt;tbl_census_&lt;span class=&#34;dv&#34;&gt;2018&lt;/span&gt; &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;read.px&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;data/census_2018.px&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Load &amp;amp; format&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb3-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;as_tibble&lt;/span&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Parseamos los datos con el objetivo de conseguir un dataframe que consista en &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;postal_code&lt;/em&gt;, &lt;em&gt;average_age&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-1&#34; title=&#34;1&#34;&gt;tbl_census_&lt;span class=&#34;dv&#34;&gt;2018&lt;/span&gt; &lt;span class=&#34;op&#34;&gt;%&amp;lt;&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;set_names&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;city&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;sex&amp;quot;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;population&amp;quot;&lt;/span&gt;)) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Cambiamos los nombre&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;na.omit&lt;/span&gt;() &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                                                    &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Na rmv&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;filter&lt;/span&gt;((city&lt;span class=&#34;op&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;Total&amp;quot;&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;(age&lt;span class=&#34;op&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;Total&amp;quot;&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;(sex&lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;Ambos sexos&amp;quot;&lt;/span&gt;)) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Duplicate info rmv&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;separate&lt;/span&gt;(city, &lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;#39;postal_code&amp;#39;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;#39;city_name&amp;#39;&lt;/span&gt;), &lt;span class=&#34;dt&#34;&gt;sep=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Sep City column&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-6&#34; title=&#34;6&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;mutate&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;age =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;as.numeric.factor&lt;/span&gt;(age)) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                         &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Conv to numeric&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;group_by&lt;/span&gt;(city_name, postal_code) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                             &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Group to operate&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;summarise&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;avg_age =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(population&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;age,&lt;span class=&#34;dt&#34;&gt;na.rm =&lt;/span&gt; T)&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(population,&lt;span class=&#34;dt&#34;&gt;na.rm=&lt;/span&gt;T)) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Avg age&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb4-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;select&lt;/span&gt;(city_name, postal_code, avg_age)                          &lt;span class=&#34;co&#34;&gt;# Discard columns&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;descargando-datos-gis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.2- Descargando datos GIS&lt;/h3&gt;
&lt;p&gt;La segunda fuente de datos que vamos a utilizar son los datos geográficos de los municipios españoles, los cuales cruzaremos con los censales anteriormente descargados para pintar la edad media en sus respectivas coordenadas.&lt;/p&gt;
&lt;p&gt;Descargando los daots GIS:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-1&#34; title=&#34;1&#34;&gt;temp &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;tempfile&lt;/span&gt;()                              &lt;span class=&#34;co&#34;&gt;# Create the tempfile&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-2&#34; title=&#34;2&#34;&gt;u=&lt;span class=&#34;st&#34;&gt;&amp;quot;http://www.arcgis.com/sharing/rest/content/items/8e31c4c1a0b348f79058f212d0d807a1/data&amp;quot;&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-3&#34; title=&#34;3&#34;&gt;utils&lt;span class=&#34;op&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;download.file&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;url =&lt;/span&gt; u, &lt;span class=&#34;dt&#34;&gt;destfile =&lt;/span&gt; temp,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-4&#34; title=&#34;4&#34;&gt;                     &lt;span class=&#34;dt&#34;&gt;mode=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;)                 &lt;span class=&#34;co&#34;&gt;# Binary mode for correct download&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-5&#34; title=&#34;5&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-6&#34; title=&#34;6&#34;&gt;&lt;span class=&#34;kw&#34;&gt;unzip&lt;/span&gt;(temp, &lt;span class=&#34;dt&#34;&gt;exdir =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;data/cities_gis&amp;quot;&lt;/span&gt;)          &lt;span class=&#34;co&#34;&gt;# Unzip in data/cities_gis&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb5-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;kw&#34;&gt;unlink&lt;/span&gt;(temp)                                    &lt;span class=&#34;co&#34;&gt;# Delete temp file&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tratamos estos datos para convertirlos de formato espacial a datos tabulares. Para este caso concreto de 3D, las Islas Canarias podrían deformarnos el gráfico, por lo que decidimos permanecer concentrados en nuestro objetivo didáctico y filtramos estas coordenadas. Por supuesto es posible mantenerlas sin perjudicar el gráfico, alterando sus coordenadas y acercándolas a la península. ¡Esto te queda como tarea para ti!&lt;/p&gt;
&lt;p&gt;Para llevar a cabo este procesado de los datos, usamos la función &lt;em&gt;fortify&lt;/em&gt; para no depender de más paquetes. No obstante esta funcion nos lanza un &lt;em&gt;warning&lt;/em&gt; sugiriendonos el uso de la función &lt;em&gt;tidy()&lt;/em&gt; del paquete &lt;em&gt;broom&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb6-1&#34; title=&#34;1&#34;&gt;tlb_cities_gis &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;readOGR&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;dsn =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;data/cities_gis/Municipios_ETRS89_30N.shp&amp;quot;&lt;/span&gt;,&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb6-2&#34; title=&#34;2&#34;&gt;                              &lt;span class=&#34;dt&#34;&gt;verbose=&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;FALSE&lt;/span&gt;) &lt;span class=&#34;co&#34;&gt;# Spatial data reading&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-1&#34; title=&#34;1&#34;&gt;tlb_cities_gis &lt;span class=&#34;op&#34;&gt;%&amp;lt;&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;fortify&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;region =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;Codigo&amp;quot;&lt;/span&gt;) &lt;span class=&#34;co&#34;&gt;# %&amp;gt;%             # Conv &amp;quot;spatial object&amp;quot; to data.frame&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-3&#34; title=&#34;3&#34;&gt;  &lt;span class=&#34;co&#34;&gt;# broom::tidy()&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-4&#34; title=&#34;4&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-5&#34; title=&#34;5&#34;&gt;plot_canarias &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;F                              &lt;span class=&#34;co&#34;&gt;# Control param, initial app config&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-6&#34; title=&#34;6&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-7&#34; title=&#34;7&#34;&gt;&lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(plot_canarias&lt;span class=&#34;op&#34;&gt;==&lt;/span&gt;F){                           &lt;span class=&#34;co&#34;&gt;# Should be moduled in a funct&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-8&#34; title=&#34;8&#34;&gt;  tlb_cities_gis &lt;span class=&#34;op&#34;&gt;%&amp;lt;&amp;gt;%&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;filter&lt;/span&gt;((long&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;(lat&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;4000000&lt;/span&gt;))              &lt;span class=&#34;co&#34;&gt;# Filter peninsular data&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb7-10&#34; title=&#34;10&#34;&gt;} &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para terminar, &lt;em&gt;joineamos&lt;/em&gt; los dos datasets creados para conformar el tablón final, el cual vamos a usar como base para crear las gráficas. Apuntar que usamos &lt;em&gt;left join&lt;/em&gt; como forma de mantener los datos geos y no perder coordenadas en el &lt;em&gt;plot&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb8-1&#34; title=&#34;1&#34;&gt;tbl_cities_avg_age &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;tlb_cities_gis &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb8-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;left_join&lt;/span&gt;(tbl_census_&lt;span class=&#34;dv&#34;&gt;2018&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;by =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt; =&lt;span class=&#34;st&#34;&gt; &amp;quot;postal_code&amp;quot;&lt;/span&gt;)) &lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como buena práctica, comprobamos el número de NAs generados a partir de este &lt;em&gt;left join&lt;/em&gt;. Estos NAs serán municipios de los que tenemos coordenadas pero no contamos con información sobre la edad media.&lt;/p&gt;
&lt;p&gt;Vemos que los valores perdidos representan únicamente el 1% del total de filas, por lo que vamos a imputarlos con el dato del código postal previo. Es cierto que podemos mejorar esta imputación, pero para nuestro propósito será suficiente debido al pequeño porcetaje del total que representan. ¡Vuelve a quedar de tu mano mejorarlo y comentárnoslo!&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-1&#34; title=&#34;1&#34;&gt;  tbl_cities_avg_age &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;group_by&lt;/span&gt;(id) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-3&#34; title=&#34;3&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;summarise&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;na =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;is.na&lt;/span&gt;(avg_age))) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                 &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# NAs by city&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;summarise&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;missing_perc =&lt;/span&gt; &lt;span class=&#34;kw&#34;&gt;sum&lt;/span&gt;(na&lt;span class=&#34;op&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;op&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;length&lt;/span&gt;(na)&lt;span class=&#34;op&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Perc cities with at least 1 na &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-5&#34; title=&#34;5&#34;&gt;&lt;span class=&#34;st&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;select&lt;/span&gt;(missing_perc)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-6&#34; title=&#34;6&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-7&#34; title=&#34;7&#34;&gt;tbl_cities_avg_age &lt;span class=&#34;op&#34;&gt;%&amp;lt;&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;       &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;arrange&lt;/span&gt;(id) &lt;span class=&#34;op&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb9-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;fill&lt;/span&gt;(avg_age, &lt;span class=&#34;dt&#34;&gt;.direction =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&amp;quot;down&amp;quot;&lt;/span&gt;)            &lt;span class=&#34;co&#34;&gt;# Fill with the previous pc data.&lt;/span&gt;&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizacion-con-ggplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.3- Visualización con Ggplot&lt;/h3&gt;
&lt;p&gt;Inspirado en gran medida en &lt;a href=&#34;http://blog.manugarri.com/making-a-beautiful-map-of-spain-in-ggplot2/&#34; class=&#34;uri&#34;&gt;http://blog.manugarri.com/making-a-beautiful-map-of-spain-in-ggplot2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Con este dataset final, plotearemos las variables que representan las coordenadas en el eje X e Y y en primer lugar representaremos la edad media mediante la paleta de color. Las tonalidades rojas son asignadas a edades superiores y las azules a las edades medias más jóvenes. Conseguimos esto mediante el &lt;em&gt;aesthetic fill&lt;/em&gt; de Ggplot.&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-1&#34; title=&#34;1&#34;&gt;myPalette &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;colorRampPalette&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;rev&lt;/span&gt;(&lt;span class=&#34;kw&#34;&gt;brewer.pal&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&amp;quot;Spectral&amp;quot;&lt;/span&gt;)))      &lt;span class=&#34;co&#34;&gt;# Create reverse Spectral palette&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-2&#34; title=&#34;2&#34;&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-3&#34; title=&#34;3&#34;&gt;plot_cities &amp;lt;-&lt;span class=&#34;st&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;ggplot&lt;/span&gt;() &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-4&#34; title=&#34;4&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;geom_polygon&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;data =&lt;/span&gt; tbl_cities_avg_age, &lt;span class=&#34;kw&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;fill =&lt;/span&gt; avg_age,   &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-5&#34; title=&#34;5&#34;&gt;                                         &lt;span class=&#34;dt&#34;&gt;x =&lt;/span&gt; long, &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-6&#34; title=&#34;6&#34;&gt;                                         &lt;span class=&#34;dt&#34;&gt;y =&lt;/span&gt; lat, &lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-7&#34; title=&#34;7&#34;&gt;                                         &lt;span class=&#34;dt&#34;&gt;group =&lt;/span&gt; id)) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Dummy variable to correct fill by PCode.&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-8&#34; title=&#34;8&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;scale_fill_gradientn&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;colours=&lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;myPalette&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;)) &lt;span class=&#34;op&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;                 &lt;/span&gt;&lt;span class=&#34;co&#34;&gt;# Choose palette colours.&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-9&#34; title=&#34;9&#34;&gt;&lt;span class=&#34;st&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kw&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;dt&#34;&gt;fill=&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;&amp;quot;Avg age&amp;quot;&lt;/span&gt;)&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb10-10&#34; title=&#34;10&#34;&gt;&lt;span class=&#34;kw&#34;&gt;plot&lt;/span&gt;(plot_cities)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/de-ggplot-a-3d-en-r-con-rayshader/ggplot_españa_edad_media_municipio.png&#34; height=&#34;790px&#34; width=&#34;790px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizacion-en-3d-con-rayshader&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.4- Visualización en 3D con Rayshader!&lt;/h3&gt;
&lt;p&gt;El anterior gráfico estaba bastante bien. En el podemos facilmente distinguir los municipios con la edad media más alta y los municipios más jóvenes. Sin embargo, los ojos humanos no son capaces de distinguir fácilmente entre colores próximos ni distinguir la magnitud de las diferencias en esta escala. Por lo tanto, ¿qué tal complementarlo con un nuevo eje?&lt;/p&gt;
&lt;p&gt;Veamos como hacerlo y que tal queda&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb11-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;plot_gg&lt;/span&gt;(plot_cities,&lt;span class=&#34;dt&#34;&gt;multicore=&lt;/span&gt;&lt;span class=&#34;ot&#34;&gt;TRUE&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;width=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;height=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;scale=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;310&lt;/span&gt;)    &lt;span class=&#34;co&#34;&gt;# Plot_gg de rayshader&lt;/span&gt;&lt;/a&gt;
&lt;a class=&#34;sourceLine&#34; id=&#34;cb11-2&#34; title=&#34;2&#34;&gt;&lt;span class=&#34;kw&#34;&gt;render_snapshot&lt;/span&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/es/post/de-ggplot-a-3d-en-r-con-rayshader/rayshader_3D_mapa_españa.png&#34; height=&#34;600px&#34; width=&#34;600px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Hmm dijiste algo sobre render_movie()… Qué tal si lo animamos?&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animacion-3d-con-rayshader&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.5- Animación 3D con Rayshader&lt;/h3&gt;
&lt;p&gt;En el gráfico anterior, la variable edad media queda bastante más entendible por el ojo humano en la dimensión añadida. Aquí la elección del ángulo e inclinación correctos es un punto esencial. Pero, ¿y mejoramos la interpretabilidad rotando el gráfico?&lt;/p&gt;
&lt;p&gt;Esto es de lo que se encarga la siguiente función:&lt;/p&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode r&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;a class=&#34;sourceLine&#34; id=&#34;cb12-1&#34; title=&#34;1&#34;&gt;&lt;span class=&#34;kw&#34;&gt;render_movie&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&amp;quot;img/movie_spain.mp4&amp;quot;&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;frames =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;720&lt;/span&gt;, &lt;span class=&#34;dt&#34;&gt;fps=&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;zoom=&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;0.6&lt;/span&gt;,&lt;span class=&#34;dt&#34;&gt;fov =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;30&lt;/span&gt;)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;featured.gif&#34; height=&#34;250px&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;style&gt;
p {
  word-spacing: 3px;
  text-indent: 20px;
  text-align: justify;
}
.page-subtitle {
  text-align: left  !important;
    text-indent: 0px !important;
}
.card-text {
  text-align: left  !important;
    text-indent: 0px !important;
}
&lt;/style&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js&#34; data-dojo-config=&#34;usePlainJson: true, isDebug: false&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;window.dojoRequire([&#34;mojo/signup-forms/Loader&#34;], function(L) { L.start({&#34;baseUrl&#34;:&#34;mc.us4.list-manage.com&#34;,&#34;uuid&#34;:&#34;91551f7ed29389a0de4f47665&#34;,&#34;lid&#34;:&#34;d95c503a48&#34;,&#34;uniqueMethods&#34;:true}) })&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
